{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["introduct","leetcod","刷题总结"],"dynamic-programming/518-coin-change2.html":["(amount","(curr","(len","(let","+=","//","0)","0,","0;","1;","1])","1][j","1]];","2","518:","=","===",">","[0];","amount)","amount,","array(len+1);","chang","coin","coins)","coins.length;","coins[i","const","curr)","curr,","dp","dp[i","dp[i][j","dp[i][j]","dp[len][amount];","function","function(amount,","helper(coins,","len","new","pos,","pos;","re","res)","res);","res[0]++;","res[0];","return","return;","var","{","}","};","其实这也是一道经典的背包问题，略有不同的是这里面的元素可以被多次使用。注意初始状态的选择","多次使用","每个元素只能使用一次","还是贴出来dfs吧","这道题一看就是无脑dfs，结果超时。。。。果然这题没想像中简单。"],"string/394-decode-string.html":["!==","!isnan(s[k]))","&&","'';","'['","'[')","']'","(;pos[0]","(i","(k","(len","(let","(po","(true)","//","0","0)","0;","1;","394:",";","=","===",">=","[0];","const","correspond","decod","decodestr","find","first","function","function(s)","helper(s,","helper(str,","i);","ii","j","j));","k","len","len)","match","num","number","parseint(s.substring(k+1,","po","pos)","pos);","re","return","s.length;","s.substring(j+1,","s[j]","str","str.length;","string","var","word","{","}","};","论坛里有人用dfs来解决这个问题，关键是把pos以引用方式传入，这样scan一遍就可以decode整个string。","这道题可以从人的思维方式入手。如果是人来解决这个问题，会先找到最内层的[]，然后decode之间的string。重复这个过程直到所有的[]都被decode。"],"string/647-palindromic-substrings.html":["&&","(len","(let","0","0)","0;","1)","1;","647:","=","===","array(len);","const","countsubstr","dp","dp:","function(s)","len","new","palindrom","palindrome问题常见的方法有：","re","return","right","s.length;","substr","var","{","}","二维dp[start][len]记录每个子串是否是palindrom","扩展法：","扩展法：从一个letter开始左右扩展"],"hashmap/954-array-of-doubled-pairs.html":["(!(doubl","(len","(let","+=","0)","0;","2*a[i];","2;","2n就在hashmap中找到相应的数并减一,","954:",";","=","===","=>","a.length;","a.sort((a,","array","b)","canreorderdoubl","const","count","counter加二","doubl","false;","function(a)","len","len;","map","map)","map[a[i]]","map[double]","math.abs(a)","math.abs(b));","pair","return","true;","var","{","{};","||","}","};","从左向右扫描序列，遇到n,","用hashmap记录每个数出现的次数","看看counter是不是等于序列的长度","绝对值排序序列","这道题需要按绝对值排序，从小到大顺藤摸瓜。"],"hashmap/653-two-sum-iv-binary-tree.html":["(root","(set.has(root.val))","653:","=","===","bst","const","dfs(root,","dfs(root.left,","dfs(root.right,","false;","findtarget","function","function(root,","input","iv","k)","k,","new","null)","return","root.val);","set","set();","set)","set);","set.add(k","sum","tree的情况。","true;","two","var","{","||","}","};","但是如果用hashmap来记录遇到点的值的话，可以推广到所有binari","这道题虽然输入是bst,"],"hashmap/454-4-sum-2.html":["(len","(let","0)","0;","454:","4sum","=","===","a.length;","a[i]","b,","b[j]，然后遍历c[i]+d[j]，如果存在于map中，则累加。要注意map的value要存a[i]+b[j]的次数，因为可能不同的i,j，它们的和是一样的。","c,","const","d)","foursumcount","function(a,","ii","len","map","return","sum本质上是一样的，用hashmap存储","var","{","{};","}","这道题和2"],"binary-tree/958-check-completeness-of-a-binary-tree.html":["!hasgap(currlevel);","(currlevel.filter(a","(isbottom(currlevel))","(let","(queue.length","(root","0)","0;","958:","=","===","=>",">","[[root]];","[];","binari","check","complet","const","currlevel","false;","function(root)","iscompletetre","nextlevel","null)","null).length","null之间。为了思路清晰，最好能定义单独的函数来作判断，比如判断是否是最后一层，判断最后一层是否有gap。这样书写可以保证面试时思路集中在某一个具体问题上，不容易出bug,","queue","queue.pop();","return","tree","true;","var","{","}","也会给面试官留下好印象，因为这样的代码更符合设计模式的要求。","这个题搞了我好久才通过，思路比较直接，就是bfs找到最后一层，然后判断是否存在null介于non"],"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":["!==","&&","(!map.get(root))","(left","(right","(root","0","863:","=","===","[...map.get(root),","[left]);","[right]);","[root]);","a.val);","bfs搜索第k层的所有节点","binari","const","dfs(left,","dfs(right,","dfs(root,","dfs建立无向图的map","distanc","distancek","function","function(root,","k","k)","left","left]);","level","map)","map);","map.set(left,","map.set(right,","map.set(root,","node","null","null)","right","right]);","root.left;","root.right;","target,","tree","var","{","||","}","};","这道题非常巧妙的将tree的问题转化为graph的问题，而且这个解法是通用的，可以用在所有需要向上搜索parent的问题上。"],"binary-tree/652-find-duplicate-subtrees.html":["'null';","(code","(let","(map[key].length","(root","1)","652:","=","===",">",">${left}",">${right}`;","[];","[root];","`${root.val}","code","code;","const","duplic","find","findduplicatesubtre","function","function(root)","helper(root,","helper(root.left,","helper(root.right,","key","left","map","map)","map);","map[code]","map[code].push(root);","null)","re","res.push(map[key][0]);","res;","return","right","subtre","var","{","{};","}","};","这道题乍一看没有头绪，其实不难。找duplicate肯定是往hashmap上想，检查子树结构是否相同应该考虑如何对子树编码，利用分治法在每个节点处得到该子树的编码，然后看是否在hashmap中。"],"binary-tree/449-serialize-and-deserialize-bst.html":["&&","'')","'';","(arr.length","(data","(i","(root","(root.left","(root.right","*","*/","/**","0)","1;","449:","=","===","@param","@return","`${root.val},${dfs(root.left)}`;","`${root.val},${dfs(root.right)}`;","`${root.val},${left},${right}`;","arr","bst","const","curr","data","data.split(',');","decod","deseri","dfs(root)","dfs(root);","dfs(root.left);","dfs(root.right);","encod","function","function(data)","function(root)","helper(arr)","helper(arr);","left","null","null)","null;","parseint(arr[0]);","re","res;","return","right","root.right","serial","string(root.val);","tree,","tree.","var","{","{string}","{treenode}","}","};","和inorder去重建binari","因为bst的特点已经足够我们找到左右子树。","这道题和297非常像，不同的是这里不需要preorder"],"binary-tree/437-path-sum-3.html":["(root","(root.val","+","0)","0;","1","437:",":","=","===","?","function","function(root,","iii","null)","path","pathsum","pathsum(root.left,","pathsum(root.right,","pathsumfrom(root,","pathsumfrom(root.left,","pathsumfrom(root.right,","return","root.val)","root.val);","sum","sum)","sum);","var","{","}","};","这道题写法不难，但是思路相当经典。需要考虑经过root节点和不经过root节点两种情况。"],"two-pointer/962-max-width-ramp.html":["(len","(right",")","0,","0;","962:","=","a.length;","a[i]);","const","function(a)","left","left++;","len","math.max(max[i+1],","max","max[i]","max[right])","maxwidthramp","ramp","re","res;","return","right","var","width","{","}","};","一开始两个指针都在最左边，首先试图尽量向右移动右边的指针。当右边子序列有数比左指针的数大时，我们就可以一直移动右指针。当右指针所在的右序列没有数比左指针的数大时，开始移动左指针，直到右指针所在的右序列有数比左指针的数大停止。注意要检查右指针不能越界。","其中还需要一个辅助\b的array，作用是记录从当前位置到最右边这个子序列的最大值。","这道题乍一看没有什么思路，似乎只能用双重循环暴力求解。但是仔细想想发现是一道双指针滑动窗口\u001d题。我们\b需要维护一个滑动的窗口，使得窗口的大小尽量最大。"],"two-pointer/948-bag-of-tokens.html":["(end","(len","(start","(tokens[end","+=","0","0,","0;","1;","948:","=","===","]","b);","bag","bagoftokensscor","break;","const","end","end,","function","function(tokens,","getpoints(tokens,","len","max","max;","p","p)","points++;","points;","return","start","start,","token","tokens.length;","tokens[start++]);","tokens[start++];","tokens[start])","var","{","||","}","};","分治去了，因为有点像取石子的题。用分治法写很麻烦，最后还超时了。没办法重新想思路，其实这道题有一个隐含条件，那就是买入最小的，卖出最大的，可以凭空增加power的数量，然后再检查是否能买到更多的分数。本质上还是一道双指针题。要注意每次买入前要检察是否当前的power数足够买入point.","这首题一开始想到dp,"],"graph/947-moast-stones-removed-with-same-row-or-col.html":["(len","947:","=","column","const","function(stones)","len","map。下次即使对角线上的点也连通，也可以用这种方法。","remov","removeston","row","same","stone","stones.length;","var","{","这道题本质上是图的连通性问题。通过行列坐标可以构造出无向图。然后dfs遍历每一个节点，数算出图中所有连通的节点数。需要注意的是每次出发的起点不要计算，因为删除到最后每个连通子图需要留下至少一个点。这个方法是通用的，不论在什么规则下导致两点连通，我们都可以用这种方法先构造出adjac"],"graph/934-shortest-bridge.html":["&&","(let","(row","(囧)","0","0%","0)","0;","934:","=","===","[];","beat","bridg","col","const","dfs找到一个island的所有点","dfs把两个islands的坐标分别记录下来，存在两个array中。","flag","function(grid)","grid.length;","grid[0].length;","island","nextcol","nextrow","queue.length;","queue;","return","row","shortest","shortestbridg","size","true;","var","x+dx[j]","y+dy[j]","{","}","双重循环两个array,","找到其中manhattan距离最短的两个点。","更好的做法是：","最直接的想法是:","用bfs从所有点向外扩张，直到碰到第二个island的点","这种方法勉强ac,","这道题和其它的islands题目非常类似。难点在于如何确定两个islands之间的最短距离。"],"graph/200-number-of-islands.html":["&&","(let","(row","0","0)","0;","200",":","=","===","col","const","function(grid)","grid.length;","grid[0].length;","grid[i][j]","island","nextcol","nextrow","number","numisland","re","return","row","var","{","}","不需要额外定义visited矩阵，可以直接修改","来判断一个点是否已经访问过","每一个起点是一个新的island的开始，dfs函数不需要返回任何值，在主函数中设计数器即可","这道题和947题很类似，本质上是图的连通性问题，利用dfs遍历所有连通在一起的点。这个题也有自己的特殊性，使代码简化："],"graph/694-number-of-distinct-islands.html":["&&","(let","(row","0","0)","0;","694",":","=","===","col","col+dy[i]","const","distinct","function(grid)","grid.length;","grid[0].length;","island","islands很像，唯一的区别就是要检查island的形状。难点在于如何给形状编码。因为每次df","new","number","numdistinctisland","re","return","row","row+dx[i]","set","set();","traverse的路径是相同的，可以设每一个island的起点为归一化的零点，然后把沿路访问过的归一化的节点坐标记录下来,","var","{","}","就可以做为island的形状编码。","这道题和200题number"],"graph/695-max-area-of-island.html":["&&","(let","(row","0","0)","0;","695",":","=","===","area","col","col+dy[i]","const","function(grid)","grid.length;","grid[0].length;","island","max","maxareaofisland","new","return","row","row+dx[i]","set","set();","var","{","}","这道题和200，694非常类似，关键在于计算出每个islands的节点个数。"],"graph/815-bus-routes.html":["(let","(numbus","(s","0)","0;","1;","815",":","=","===","[];","bu","const","function(routes,","map,","map或set，方便以后查询","numbus","numbusestodestin","queue.length;","return","rout","routes.length;","routes包含起点或终点","routes开始进行bfs，当某个route在终点所包括的routes中，返回当前的level","route建立stop","route，确定是否两个route之间有相同的stop,如果有则这两个routes是连通的","s,","size","stop","stop，而是bus/route。","t)","var","{","}","两两比较bu","以所有包括起点的bu","但是思路比较直接。首先要看到这是一个graph的问题，连通的节点不是bu","利用前一步的stop","对每一个bu","对起点和终点找到所有bu","这道题虽然是hard,"],"graph/675-cut-off-trees-for-golf-event.html":["!visited[x][y];","&&","(forest[0][0]","(let","(row","0","0)","0;","0];","1)","1.","1;","675",":","=","===","=>","[0,","[];","[i,","arr","arr.push(forest[i][j]);","arr.sort((a,","b)","b);","col","const","cut","cutofftre","event","forest.length;","forest[0].length;","function(forest)","golf","j];","map","map[forest[i][j]]","queue.length;","re","return","row","size","start","tree","var","x","y","{","{};","}","建立树的高度与树的坐标之间的map，方便根据排序的树高找到树的位置","扫描array，记录树的高度，并从小到大排序","知道当前和下一颗树的位置，用bfs找到最短距离。如果无法到达，则返回","这个题虽然是hard，但是思路还是非常直接的，就是代码量大一点，一次ac有难度。基本思路是","遍历高度array,"],"graph/490-the-maze.html":["!==","&&","(i","(i+1","(maze[start[0]][start[1]]","(queue.length","(row","(x","//","0","0)","1","1)","1,","1;","1]);","1，以避免回头的问题。","490",":",";","=","===",">",">=","[start];","[x,","col","const","dest)","dest[0]","dest[1])","false;","function(maze,","haspath","left","maze","maze.length;","maze[0].length;","maze[dest[0]][dest[1]]","maze[i][y]","maze[x][i]","maze[x][y]","queue","queue.pop();","queue.unshift([i","queue.unshift([x,","return","row","search","start,","true;","up","var","x)","x;","y","y)","y;","y]","y]);","{","||","}","};","这道题乍一看有点难，其实还是bfs的变种。不同于一般的island问题（找四个邻接点),","这里的neighbor是沿一个方向一直走下去直到走不动。在处理完当前节点后可以把它标记为"],"graph/489-robot-room-cleaner.html":["(let","(set.has(code))","//","0);","0,","0:","0;","180,","180:","270:","270];","489","90,","90:",":","=",">${y}`;","[0,","`${x}","cleaner","cleanroom","code","const","dfs每一个位置，如果未访问过则清理该位置","dir)","direction:","e,","function","function(robot)","helper(robot,","iterave四个方向，如果可以移动到下个位置，则dfs之，如果不行，转90度继续尝试","n,","new","nextdir","return;","robot","robot.clean();","room","set","set();","set,","set.add(code);","var","w","w,","x,","y,","{","}","};","定义一个set存放已经访问过的位置","这道题有一点难懂，它不像其它graph的题那样有一个array作为输入，而是需要robot具有自学习能力，慢慢探索地图，所以只有robot一个input。明白这个以后思路还是很直接的：","（在清理完之后要回到当前位置，方向也要相同）"],"graph/787-cheapest-flights-within-K-stops.html":["&&","(let","(n","(src","+","0","0)","0;","1","1,","787",":","=","===","?","accumcost","bfs:","cheapest","const","continue;","cost,","cost[curr+','+map[curr][j]]]);","cost[src+','+next],","cost。一开始超时，需要在入队前判断accumul","cost大，如果大就没有必要再入队了。","cost是否已经比当前的min","dfs(map,","dfs:","dst)","dst,","findcheapestpric","flight","flights,","function(n,","k","k)","level","level++;","map","min","min)","min);","min;","min[0])","next,","number.max_safe_integ","queue.unshift([map[curr][j],","return","src,","stop","sum","var","within","{","{};","}","};","同样要prone优化，否则会超时。","这道题是一道经典的带权重的有向图问题。既可以用bfs，也可以用dfs来解决。","难点在于每个加入队列的节点需要包含到目前为止的accumul"],"intervals/763-partition-labels.html":["(len","(let","+","0)","0;","1);","763:","=","===","=>","[];","const","curr[0])","curr[1])]);","curr[1]]);","delet","function(s)","i[0]","i[1]","intervals.map(i","intervals.pop();","intervals.push([curr[0],","intervals.push([last[0],","interval的长度。","interval，最后返回merg","label","len","map","map[s[i]];","math.max(last[1],","partit","partitionlabel","return","s.length;","var","{","{};","}","};","这道题本质上是一道interval的问题。我们只关心对于一个letter，它首次和末次出现的位置，然后依次merg"],"state-loop/957-prison-cells-after-N-days.html":["%","(len","(let","(n","(nextstatestr","(true)","+","0","0)","0;","0};","1;","1]","957:","=","===","[];","[cells];","array(len);","break;","cell","cells.length;","const","day","function","function(cells,","getnextcell(cells)","getnextcell(cells);","i++;","i;","len","map","map)","map[nextstatestr]","map[nextstatestr];","n","n)","new","next","next[0]","next[len","nextstat","nextstate.join('');","nextstate;","nextstatestr","period","periodstart","periodstart)","periodstartpo","periodstartpos)","periodstartpos];","po","prison","prisonafternday","return","states.length","states.push(nextstate);","states=","states[(n","var","{","{[cells.join('')]:","||","}","};","这道题当看到example2的n=100000000时，就应该意识到状态肯定会循环重复。只要记录每次的状态，直到检测到状态重复时，就可以算出循环起始位置和循环长度。"],"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":["(!shoulddelete)","(deletedlevels.has(level))","(i","(len","(let","(start","+","0;","1;","955:","=",">=","[];","a.length;","a[0].length)","a[i+1][l].charcodeat(0))","a[i+1][level].charcodeat(0))","block","blocks.push([j,","break;","column","const","delet","deletedlevels)","deletedlevels);","deletedlevels.add(level);","end)","end,","function(a)","helper(a,","i++;","i]);","ii","len","level+1,","level,","make","mindeletions","res++;","return","shoulddelet","sort","start,","start;","sum","sum;","true;","var","{","}","另一种非常精妙的解法是建立boolean数组存储当前字符串是否已经是排序状态。","如果没有逆序，则再扫描一遍，看看哪些字符串的顺序已经确定（除了字符相同的顺序不定）","对于每一列的字符进行分组，建立递推关系。","当前列开始往后的子串中，删除的列数等于每一组删除的列数之和。","这道题我一开始想复杂了，我想的是用分治的思想去解决这个问题。","难点是前一组如果删除了某一列，那么之后的组应该跳过那一列的检查。","首先扫描一列，如果存在逆序，则删除这一列"],"divide-and-conqueor/678-valid-parenthesis-string.html":["(curr","(len","(po","0)","0);","0;","0。","678:","=","===",">=","card的那道看起来要难了不少。关键是每次遇到*就会有3个分支，这样总共的可能性是指数上升的。不考虑复杂度的问题，最直接的想法是分治。用一个counter统计左右括号出现次数的差。合法的字符串要求最终的count","checkvalidstr","const","curr","curr)","dfs(0,","dfs(pos,","function","function(s)","len","parenthesi","return","s,","s.length;","str,","str.length)","string","true;","valid","var","{","}","};","这道题比没有wild"],"array/406-queue-reconstruction-by-height.html":["!==","(a[0]","(len","(let","0;","406:","=","[];","a[0];","a[1]","b[0]","b[0])","b[1];","const","function(people)","height","k)里关于k的定义。但这却是解题的关键。","len","people.length;","queue","re","reconstruct","reconstructqueu","return","var","{","}","});","前一句好像是废话，因为这就是(h,","当先排高个，因为高个排过后，低个不论放哪都不影响刚才高个的k","排序时高个子前面有几个人是和比他低的人无关的，只和比他高或一样高的人有关。","这道题挺有趣的，基本就是在考查面试者是否脑子够聪明。反正我捣鼓了半天也没想到最佳策略。下面的分析是根据discussion里的最佳答案来的："],"geometry/836-rectange-overlap.html":["836:","[blx2,","[l2,","blx1","bly1,","bly2,","l1","overlap","r1],","r2].","rectangl","trx1,","trx2,","try1],","try2].","一维：[l1,","二维：[blx1,","这个题一维二维的情况都很经典，可以记住结论："],"stack/739-daily-temperatures.html":["(len","(let","(t[i]","0)","0;","1)","1]])","739:","=","===",">","[0];","[];","array(len);","break;","const","daili","dailytemperatur","function(t)","len","new","previdx","previdx;","re","res;","res[previdx]","return","stack","stack.pop();","stack.push(i);","stack的数时就先pop,","stack，当遇到破坏min","t.length;","t[stack[stack.length","temperatur","var","{","}","};","再push。技巧是把index入栈而不是value本身。","这道题本质上是维护一个min"],"stack/496-next-greater-element-1.html":["&&","(len1","(len2","(let","(stack.length","0","0)","0;","1);","1]]","496:","=","===",">","[];","array(len1).fill(","const","continue;","element","function(nums1,","greater","i++;","len1","len2","map","new","next","nextgreaterel","number","nums1.length;","nums2)","nums2.length;","nums2[i])","nums2[stack[stack.length","re","return","stack.push(i);","stack的数时就先pop,","stack，当遇到破坏min","var","{","{};","}","一看到","再push。技巧是把index入栈而不是value本身。","就应该想到stack,","这道题和739非常类似。都是要维护一个min"],"stack/503-next-greater-element-2.html":["&&","(len","(let","(stack.length","...nums.slice(0,","0","0)","0;","1);","1)];","1]]","503:","=","===",">","[...nums,","[];","array(len).fill(","const","element","function(nums)","greater","ii","len","new","next","nextgreaterel","num","nums.length;","nums[i])","nums[stack[stack.length","re","return","stack","stack.push(i);","var","{","}","这道题和496基本一样，只要先把array扩展为原来的一倍就可以处理circular的问题。"],"api/380-insert-delete-getrandom-o1.html":["(!(val","(val","*","*/","/**","1;","1];","1]]","380:","=","@param","@return","[];","alreadi","array中最后一个数到要删除数的位置,","arr存储数据","contain","copi","delet","element","element.","false;","function()","function(val)","getrandom","insert","map的key是数据值，value是对应的arr的下标","o(1)","random","randomizedset","randomizedset.prototype.getrandom","randomizedset.prototype.insert","randomizedset.prototype.remov","remov","return","set","set.","specifi","this.arr","this.arr.length","this.arr.length)];","this.arr.pop();","this.arr.push(val);","this.arr[math.floor(math.random()","this.arr[this.arr.length","this.arr[this.map[val]]","this.map","this.map)","this.map))","this.map[this.arr[this.arr.length","this.map[val]","this.map[val];","true","true;","val","valu","value，最后弹出array的最后一个数。有点狸猫换太子的意思，挺巧妙的。","var","{","{boolean}","{number}","{};","}","};","但是删除不容易o(1)。考虑到这是一个set，数据的顺序无所谓，可以用一个map存储meta信息。","当删除一个数时，","更新map的值，删除要弹出的key,","这道题难点在于选择正确的数据结构。如果用array，getrandom和insert很容易o(1)，"],"api/353-design-snake-game.html":["&&","'d'","'d')","'l'","'l')","'r'","'u'","'u')","(!this.isvalid(this.x,","(!this.process(this.x,","(direct","(x,","*","*/","/**","0","0;","0]];","1","1;","353:",";","=","===",">=","@param","@return","[1,0].","[1,0]]","[1,1],","[[0,","[[1,1],","bite","body.","boundari","cross","data","design","direct","down","e.g","first","food","food)","food;","free也不容易。如果思路清晰则代码会非常简洁。","function","function(direction)","function(width,","game","game'","height","height,","height;","here.","initi","left,","list","mean","move","move.","over","over.","posit","return","right,","score","screen","second","snake","snake.","snakegam","snakegame.prototype.isvalid","snakegame.prototype.mov","structur","this.col","this.food","this.foodidx","this.i","this.row","this.snak","this.snake.length","this.x","this.x++;","this.y))","this.y++;","up,","var","width","width;","x","y","y)","{","{number[][]}","{number}","{string}","}","};","判断是否当前cell有食物，如果没有则弹出蛇尾。判断当前cell是否和蛇collide，如果没有则压入cell作为新的蛇头","判断此时头部是否已经越界","移动头部到下一个cell","这道题非常有意思，难度不大但是想bug"],"api/348-design-tic-tac-toe.html":["(row","(this.rowcount[play",")","0;","1)","1][0]","1][0]++;","1][1]","1][1]++;","1][col]","1][col]++;","1][row]","1][row]++;","348:","=","===","col","col)","col,","design","function(row,","player)","player;","return","tac","this.colcount[play","this.diagcount[play","this.row","this.rowcount[play","tic","tictactoe.prototype.mov","toe","{","||","}","};","这道题难点是如何快速的判断是否已经满足获胜条件。由于获胜条件是某一行/列/主副对角线全部是一种棋子，我们可以存储每一行/列/对角线，每一位选手的棋子总数。"],"api/341-flatten-nested-list-iterator.html":["(arr.length","(curr.isinteger())","(i.hasnext())","(this.hasnext())","(this.stack.length","*","*/","+","...","/**","//","0)","0]","0]);","0]];","1.","1],","1];","1][1]++","1][1]++;","2,","341:","3]]","=","===",">","@constructor","@param","@return","@thi","[3,","[3,3]],","[[1,","[[[1,1],","[[nestedlist,","[];","[arr,","a.push(i.next());","allow","arr[pos].getinteger();","arr[pos];","call","const","creat","curr","false;","flatten","function","function()","function(nestedlist)","hold","holds,","implement","integ","integer,","interfac","it,","iter","list","list.","lists.","method,","nest","nestedinteg","nestedinteger()","nestediter","nestediterator(nestedlist),","nestediterator.prototype.hasnext","nestediterator.prototype.next","nestedlist","new","null","null;","pos)","pos]","re","res;","return","singl","specul","stack:","this.getinteg","this.getlist","this.isinteg","this.stack","this.stack.pop();","this.stack.push([curr.getlist(),","this.stack[this.stack.length","this:","true","true;","var","{","{boolean}","{integer}","{nestedinteger[]}","}","};","则把list取出入栈.","基本上是离不开stack的，需要存当前遍历的array及index。","如果当前是nestedlist,","当pos到达array尾部，则出栈，并把栈头的po","既然是iter","输入：[[1,","这个题需要一个一个把数据读出，所以不能一次性把array全部flat然后存起来."],"priority-queue/373-find-k-pairs-with-smallest-sums.html":["\b从0到len1","&&","(int","(j+1","(k","+","0","0)","0)先统一入队","0;","1。之后每次只用把(i,","373:","=","==",">","arraylist<>();","curr","curr[0];","curr[1];","find","int","int[]","int[]{nums1[i],","j","j)","j)只入队一次（不能重复），所以不可以无脑把(i+1,","j)只入队一次，更巧妙的方法是设计一种入队方法使每个值都能入队一次。","j+1)入队即可。","j+1)都塞进去。","k","k)","ksmallestpairs(int[]","len1","len2","list","new","nums1,","nums1.length;","nums1[a[0]]","nums1[b[0]]","nums2,","nums2.length;","nums2[a[1]]","nums2[b[1]]);","nums2[j]});","pair","priorityqueue<>((a,b)","public","queue","queue.poll();","queue来解决，关键是如何确定下一步要入队的后选值。","re","res.add(new","res;","return","smallest","smallest一般都可以用prior","sum","{","||","}","可以用hashset来保证(i,","和（i,","方法是：可以把(i,","这一题的难点是如何保证(i,","这类题的特点非常明显，只要是k"],"priority-queue/347-top-K-frequent-elements.html":["(!arr[freq])","(!map.containskey(num))","(arr[i])","(int","(len","(let","(map.entri","(num",")","+","0","0)","0;","1)","1);","1;","347:",":","=","==","===",">",">=","[];","[key];","a.getvalue());","arr","arr[freq]","arr[freq].push(key);","array();","arraylist<>();","b)","b.getvalue()","bucket","const","elementss","entri","freq","freq)","freq);","frequent","function(nums,","hashmap<>();","int","j","k","k)","key","len","list","map","map)","map.entryset())","map.get(num)","map.put(num,","map[key];","map[num]","map[num]++;","math.max(maxindex,","maxindex","maxindex;","new","num","nums)","nums,","nums.length;","prioriti","priorityqueue<>((a,","public","queue","queue.offer(entry);","queue>","queue里，然后弹出前k个","queue：","re","res.add(nums[0]);","res;","return","sort:","top","topkfrequ","topkfrequent(int[]","var","{","{};","||","}","丢到prioriti","这是最无脑的解法，直接把(value,","这种方法仅局限于整数排序（range不太大）。思想是把要排序的数作为index（这里是freq)，然后按index从大到小扫描。","这道题有两种解法："],"design/chess-game.html":["!=","&&","(!piece.validmove(this,","(abstract","(board.getwin())","(piece.getclass().getname().equals(\"king\"))","(spot[cmd.desx][cmd.desy]","(true)","(username,","2","8x8","=","==","aliv","array","board","board()","board();","board.executecommand(p);","board;","boolean","break;","canmove(command)","cell","chess","class","class)","classes:","cmd","cmd.curx,","cmd.cury,","cmd.desx,","command","command(input);","coordiat","coordin","d","data","dead","destin","dsty))","executecommand(play","false;","final","fromx,","fromy,","game","game(username1,","game?","init():","init(play","initi","isvalidmove(board,","list","live:","meta","movepiece()","new","null","p)","p.addcommand(cmd);","p.getcurrentcommand(p);","p.removecurrentcmd();","p1","p1;","p2","p2;","piec","piece.color)","player","player(username1);","player(username2);","privat","process(p1);","process(p2);","process(play","public","removepiece()","return","score)","spot","spot[8][8];","spot[][]","spot[cmd.desx][cmd.desy].color","spot[cmd.desx][cmd.desy].occupy(piece);","spots;","startgame()","static","system.out.println(\"p1","system.out.println(\"p2","tox,","toy)","true;","two","username2)","void","win","win\");","win;","x,","y","{","}","问题：设计chess"],"design/deck-of-cards.html":["(player","addcard","array","black","card","cards:","classes:","club,","current","dealer","dealer)","deck","diamond,","game","getvalue:","hand","heart,","jack?","player","rank:","score","sendcard","shuffl","spade","suit:","valu","问题：design"],"design/parking-lot.html":["(!canfitvehicle(v))","(int","(vehicles","0;","=","===","arraylist<>();","boolean","class","clearspots()","compact,","enum","false;","favailablespots;","ffloor","ffloor;","floor,","floor;","fnumberofrow","fnumberofrows;","fspotsperrow","fspotsperrow;","i=","int","int[]","large,","level","level(int","level.spotfreed();","list","lot","motocyl","motospot","new","null;","numberofrows,","numberofrows;","park","park(parkingspot","park(vehicl","parkingspot","parkingspot[]","parkingspots.add(spot);","parkvehicle（vehicl","privat","protect","public","removevehicle()","return","size()","spot();","spot)","spots;","spotsnum()","spotsperrow)","spotsperrow;","true;","v)","v;","vehicl","vehicle)","vehicle.park(this);","vehicle.size();","vehicles","vehiclesize.large)","{","{};","}","};","停车场可以停摩托车，小轿车和公交车","停车场有多层，每层有多行停车位","停车场有摩托车位，紧凑型车位，和大型车位","公交车只能停在同一行中连续的五个大型车位上，不能停在小位置上","可以做如下假设：","小轿车可以停在紧凑型车位和大型车位","摩托车可以停在任何位置","问题：如何设计一个停车场？"],"design/tiny-url.html":["tini","url"],"design/vending-machine.html":["coin","dispens","empti","insert","machin","machine:","machine的角度来考虑设计","merchandis","state","vend","从state"]},"length":44},"tokenStore":{"root":{"0":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.06060606060606061},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.07317073170731707},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.046511627906976744},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.05},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.033707865168539325},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.034482758620689655},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.03333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.046153846153846156},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.04081632653061224},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.030303030303030304},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.033707865168539325},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.03076923076923077},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.031746031746031744},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},";":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},"先":{"docs":{},"统":{"docs":{},"一":{"docs":{},"入":{"docs":{},"队":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.05},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.03389830508474576}}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.025},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.02631578947368421},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.07142857142857142},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.06666666666666667},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.038461538461538464},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.05},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.050505050505050504},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.07317073170731707},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.06976744186046512},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.075},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.05454545454545454},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.056179775280898875},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.049019607843137254},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.03669724770642202},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.05},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.023529411764705882},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}}},"%":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}},"]":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}},"]":{"docs":{},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}},")":{"docs":{},";":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}},":":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},"}":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}},"。":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}},"1":{"8":{"0":{"docs":{},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},":":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}},"docs":{}},"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.023076923076923078},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}},"]":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}},"[":{"0":{"docs":{},"]":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}},"1":{"docs":{},"]":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}},"+":{"docs":{},"+":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}},";":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"docs":{},"j":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"]":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}}},"]":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}},")":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}},";":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}},")":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.023076923076923078},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},";":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}},"]":{"docs":{},";":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}},".":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}},",":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},"，":{"docs":{},"以":{"docs":{},"避":{"docs":{},"免":{"docs":{},"回":{"docs":{},"头":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}}}},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"每":{"docs":{},"次":{"docs":{},"只":{"docs":{},"用":{"docs":{},"把":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}},"2":{"0":{"0":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":2.5}}},"docs":{}},"7":{"0":{"docs":{},":":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},"]":{"docs":{},";":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}},"docs":{}},"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":2.5},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},"*":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}},"n":{"docs":{},"就":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"找":{"docs":{},"到":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"数":{"docs":{},"并":{"docs":{},"减":{"docs":{},"一":{"docs":{},",":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}},"3":{"4":{"1":{"docs":{},":":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":2}}}},"7":{"docs":{},":":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":2}}}},"8":{"docs":{},":":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":2}}}},"docs":{}},"5":{"3":{"docs":{},":":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":2.5}}}},"docs":{}},"7":{"3":{"docs":{},":":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6666666666666665}}}},"docs":{}},"8":{"0":{"docs":{},":":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":2}}}},"docs":{}},"9":{"4":{"docs":{},":":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":3.333333333333333}}}},"docs":{}},"docs":{},"]":{"docs":{},"]":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}},"4":{"0":{"6":{"docs":{},":":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":2.5}}}},"docs":{}},"3":{"7":{"docs":{},":":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":2.5}}}},"docs":{}},"4":{"9":{"docs":{},":":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":2.5}}}},"docs":{}},"5":{"4":{"docs":{},":":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":3.333333333333333}}}},"docs":{}},"8":{"9":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":2}}},"docs":{}},"9":{"0":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":3.333333333333333}}},"6":{"docs":{},":":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":2.5}}}},"docs":{}},"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":3.333333333333333}}}}}},"5":{"0":{"3":{"docs":{},":":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":2}}}},"docs":{}},"1":{"8":{"docs":{},":":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":2.5}}}},"docs":{}},"docs":{}},"6":{"4":{"7":{"docs":{},":":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":3.333333333333333}}}},"docs":{}},"5":{"2":{"docs":{},":":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":2.5}}}},"3":{"docs":{},":":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665}}}},"docs":{}},"7":{"5":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665}}},"8":{"docs":{},":":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":2.5}}}},"docs":{}},"9":{"4":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":2}}},"5":{"docs":{"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":2}}},"docs":{}},"docs":{}},"7":{"3":{"9":{"docs":{},":":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":3.333333333333333}}}},"docs":{}},"6":{"3":{"docs":{},":":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":3.333333333333333}}}},"docs":{}},"8":{"7":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4285714285714284}}},"docs":{}},"docs":{}},"8":{"1":{"5":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":2.5}}},"docs":{}},"3":{"6":{"docs":{},":":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":3.333333333333333}}}},"docs":{}},"6":{"3":{"docs":{},":":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.6666666666666665}}}},"docs":{}},"docs":{},"x":{"8":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"docs":{}}},"9":{"0":{"docs":{},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},":":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}},"3":{"4":{"docs":{},":":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":3.333333333333333}}}},"docs":{}},"4":{"7":{"docs":{},":":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665}}}},"8":{"docs":{},":":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":3.333333333333333}}}},"docs":{}},"5":{"4":{"docs":{},":":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":2.5}}}},"5":{"docs":{},":":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665}}}},"7":{"docs":{},":":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":2}}}},"8":{"docs":{},":":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":2}}}},"docs":{}},"6":{"2":{"docs":{},":":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":2.5}}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.05747126436781609},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.06201550387596899}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}},"docs":{}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}},"docs":{}}}}}}}}}}}}}},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"g":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.012448132780082987}},"e":{"docs":{},"r":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"[":{"docs":{},"]":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},"{":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}},"docs":{}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":2.0083333333333333},"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.16666666666666666}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"(":{"docs":{},")":{"docs":{},":":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}},")":{"docs":{},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"i":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":3.333333333333333},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":2}},"i":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":2.5}}}},"v":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":2.5},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":2},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":2}},"s":{"docs":{},"很":{"docs":{},"像":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"区":{"docs":{},"别":{"docs":{},"就":{"docs":{},"是":{"docs":{},"要":{"docs":{},"检":{"docs":{},"查":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"。":{"docs":{},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"如":{"docs":{},"何":{"docs":{},"给":{"docs":{},"形":{"docs":{},"状":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"每":{"docs":{},"次":{"docs":{},"d":{"docs":{},"f":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":2}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"四":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"移":{"docs":{},"动":{"docs":{},"到":{"docs":{},"下":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"则":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"之":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"行":{"docs":{},"，":{"docs":{},"转":{"9":{"0":{"docs":{},"度":{"docs":{},"继":{"docs":{},"续":{"docs":{},"尝":{"docs":{},"试":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}},"[":{"0":{"docs":{},"]":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}},"1":{"docs":{},"]":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}},"docs":{}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}}}},"=":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}},"l":{"1":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}},"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.5}}}}}}},"n":{"1":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436}}},"2":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436}}},"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.03508771929824561},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.03125},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.041666666666666664},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}},"f":{"docs":{},"t":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},"+":{"1":{"docs":{},",":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}},"docs":{},"+":{"docs":{},";":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}},",":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":3.333333333333333}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},",":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":2.012448132780083},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},".":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}},"s":{"docs":{},".":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"v":{"docs":{},"e":{"docs":{},":":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}},"o":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":5}}}}},"刷":{"docs":{},"题":{"docs":{},"总":{"docs":{},"结":{"docs":{"./":{"ref":"./","tf":0.5}}}}}},"(":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.025}}}}}}},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}},"docs":{}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"a":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}},"2":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}},"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.05714285714285714},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.031746031746031744},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.01764705882352941}}},"t":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.030303030303030304},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.033707865168539325},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.023529411764705882}}},"f":{"docs":{},"t":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}},";":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"docs":{}}}}}},"i":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.03076923076923077},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}},"s":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}},"+":{"1":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385}}},"docs":{}},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}}}}},"k":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}},"p":{"docs":{},"o":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"\"":{"docs":{},")":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"x":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"x":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"]":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"t":{"docs":{},"v":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.02631578947368421},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.038461538461538464}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}}},"w":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.037037037037037035}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}},"s":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"[":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"]":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}},"z":{"docs":{},"e":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}},"囧":{"docs":{},")":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}},"n":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},"u":{"docs":{},"m":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}},"docs":{}}}},"docs":{}}}}}}}},"x":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}},"j":{"docs":{},"+":{"1":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}},"docs":{}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}},"+":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.07692307692307693},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"=":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}},"/":{"docs":{},"/":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.025},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}},"*":{"docs":{},"*":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}}}}},"=":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.075},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.14035087719298245},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.12857142857142856},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.07692307692307693},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.13333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.10204081632653061},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.04225352112676056},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.09210526315789473},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.06666666666666667},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.175},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.125},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.16666666666666666},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.18181818181818182},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.1951219512195122},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.18604651162790697},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.2},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.10909090909090909},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.15730337078651685},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.06153846153846154},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.0847457627118644},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0784313725490196},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.08333333333333333},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.1651376146788991},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.12},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.075},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.11428571428571428},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.1111111111111111},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.1076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.14583333333333334},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.075},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.08888888888888889},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.05394190871369295},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.09195402298850575},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.1},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.04371584699453552},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.07751937984496124}},"=":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.034482758620689655},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},"=":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.041666666666666664},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.02631578947368421},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.05714285714285714},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.046153846153846156},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.04081632653061224},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.02631578947368421},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.06666666666666667},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.057692307692307696},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.02247191011235955},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.06923076923076923},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0392156862745098},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.05},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.031746031746031744},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.1111111111111111},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}},">":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}},">":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.04081632653061224},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"=":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}},"$":{"docs":{},"{":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"}":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"}":{"docs":{},"`":{"docs":{},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}},"y":{"docs":{},"}":{"docs":{},"`":{"docs":{},";":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}},",":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}},"1":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},"]":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"1":{"docs":{},"]":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"docs":{}}},"3":{"docs":{},",":{"3":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}},"docs":{},"[":{"0":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}},"[":{"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}},"docs":{}}},"docs":{}},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}},"]":{"docs":{},";":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.02631578947368421},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.031746031746031744},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.041666666666666664},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}},"l":{"2":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043}}}},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}},"i":{"docs":{},",":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}},"x":{"docs":{},",":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"x":{"2":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}}}}}}},"r":{"docs":{},"r":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"a":{"docs":{},"y":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":2.5},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077}}}}}}}}}},"docs":{},"+":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}},"docs":{}},")":{"docs":{},";":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}}},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}},"中":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"到":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"数":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},",":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}},"[":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"]":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}},";":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"]":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":2}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}},";":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}},"1":{"docs":{},"]":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}},"docs":{},"i":{"docs":{},"]":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}},")":{"docs":{},";":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}},"docs":{}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}},"i":{"docs":{},"v":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":2.5166666666666666}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":2}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4285714285714284}}}}}}},"s":{"docs":{},"s":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":5}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":2.5},"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.16666666666666666}},"s":{"docs":{},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.025}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.03333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.03508771929824561},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.04285714285714286},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.046153846153846156},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.06666666666666667},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.061224489795918366},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.05263157894736842},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.041666666666666664},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.06060606060606061},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.04878048780487805},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.06976744186046512},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.075},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.05454545454545454},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.056179775280898875},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.03076923076923077},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.05084745762711865},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.041666666666666664},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.06422018348623854},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.04},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.05714285714285714},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.06349206349206349},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.06153846153846154},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.0625},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.016597510373443983},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.029411764705882353}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.03076923076923077}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857}}}}}}}},"e":{"docs":{},"r":{"docs":{},"加":{"docs":{},"二":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":2}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},",":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.02185792349726776}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}},"l":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665}}}}},"+":{"docs":{},"d":{"docs":{},"y":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}},")":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}},",":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"+":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"+":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"]":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"+":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"+":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"。":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"超":{"docs":{},"时":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"入":{"docs":{},"队":{"docs":{},"前":{"docs":{},"判":{"docs":{},"断":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"大":{"docs":{},"就":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"再":{"docs":{},"入":{"docs":{},"队":{"docs":{},"了":{"docs":{},"。":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"比":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"n":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}},"docs":{}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}},"t":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":5.125}},"的":{"docs":{},"那":{"docs":{},"道":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"要":{"docs":{},"难":{"docs":{},"了":{"docs":{},"不":{"docs":{},"少":{"docs":{},"。":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"*":{"docs":{},"就":{"docs":{},"会":{"docs":{},"有":{"3":{"docs":{},"个":{"docs":{},"分":{"docs":{},"支":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"总":{"docs":{},"共":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"是":{"docs":{},"指":{"docs":{},"数":{"docs":{},"上":{"docs":{},"升":{"docs":{},"的":{"docs":{},"。":{"docs":{},"不":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"最":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"分":{"docs":{},"治":{"docs":{},"。":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"统":{"docs":{},"计":{"docs":{},"左":{"docs":{},"右":{"docs":{},"括":{"docs":{},"号":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"差":{"docs":{},"。":{"docs":{},"合":{"docs":{},"法":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"要":{"docs":{},"求":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}},"l":{"docs":{},"l":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}},",":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":2}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}},"r":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}},"u":{"docs":{},"b":{"docs":{},",":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":2.0091743119266057},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"m":{"docs":{},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"x":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"y":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"x":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},"p":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285}},"[":{"docs":{},"i":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}},"]":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},":":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":3.333333333333333},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806}}}}}}}},"k":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":5.0625}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":2.5083333333333333}}}}},"t":{"docs":{},")":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}},"[":{"0":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}},"docs":{}},"i":{"docs":{},"n":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":2.5},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":2}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":2.0083333333333333}},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},")":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":2.5153846153846153}}}}},"w":{"docs":{},"n":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}},")":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}},")":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}},")":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},",":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}},"建":{"docs":{},"立":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"点":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}}}},"把":{"docs":{},"两":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"分":{"docs":{},"别":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"存":{"docs":{},"在":{"docs":{},"两":{"docs":{},"个":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"中":{"docs":{},"。":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"未":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"则":{"docs":{},"清":{"docs":{},"理":{"docs":{},"该":{"docs":{},"位":{"docs":{},"置":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}},":":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}},")":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.6666666666666665}},"e":{"docs":{},"k":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":2}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}}}}}},"r":{"docs":{},")":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":2.5}}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},"y":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":2}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":3.333333333333333}}},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.029411764705882353}}},"y":{"docs":{},")":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}},"(":{"docs":{},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}}}}}}},")":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}},",":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}}},"s":{"docs":{},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}},")":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}},"w":{"docs":{},",":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},")":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}},")":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}},"g":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}},"n":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549}}},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}},"docs":{},")":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},",":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}},"p":{"docs":{},"e":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":2.5},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6666666666666665}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01639344262295082},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}},"docs":{}}}}}},"o":{"docs":{},"d":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.027777777777777776}},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":2}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4285714285714284}},"s":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549}}}}}}}},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},",":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"也":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"思":{"docs":{},"路":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"则":{"docs":{},"代":{"docs":{},"码":{"docs":{},"会":{"docs":{},"非":{"docs":{},"常":{"docs":{},"简":{"docs":{},"洁":{"docs":{},"。":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":2}}}}}}}},"o":{"docs":{},"m":{"docs":{},"x":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"y":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},"s":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666}}}}}}}},"s":{"docs":{},",":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.02631578947368421}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.03389830508474576}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}},",":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":2.5},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666}},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}},"r":{"docs":{},"e":{"docs":{},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},",":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.0625}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}},"s":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}},"n":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":2.0091743119266057}},"e":{"docs":{},"w":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.023529411764705882},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.0273224043715847},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}}},"x":{"docs":{},"t":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":2.5153846153846153},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":2}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},"[":{"0":{"docs":{},"]":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"l":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":2.020746887966805}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.016597510373443983}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":2.5},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":2},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"f":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},",":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372}}}}}}}}}}}}}}}},"s":{"1":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}},"[":{"docs":{},"a":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}},"docs":{}}},"b":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}},"docs":{}}}}},"2":{"docs":{},")":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}},"docs":{}}},"b":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}},"docs":{}}},"j":{"docs":{},"]":{"docs":{},"}":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}},"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}},"l":{"docs":{},"l":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},")":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.02631578947368421},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.041666666666666664},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.038461538461538464}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}},"之":{"docs":{},"间":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"思":{"docs":{},"路":{"docs":{},"清":{"docs":{},"晰":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"能":{"docs":{},"定":{"docs":{},"义":{"docs":{},"单":{"docs":{},"独":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"作":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"层":{"docs":{},"是":{"docs":{},"否":{"docs":{},"有":{"docs":{},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"书":{"docs":{},"写":{"docs":{},"可":{"docs":{},"以":{"docs":{},"保":{"docs":{},"证":{"docs":{},"面":{"docs":{},"试":{"docs":{},"时":{"docs":{},"思":{"docs":{},"路":{"docs":{},"集":{"docs":{},"中":{"docs":{},"在":{"docs":{},"某":{"docs":{},"一":{"docs":{},"个":{"docs":{},"具":{"docs":{},"体":{"docs":{},"问":{"docs":{},"题":{"docs":{},"上":{"docs":{},"，":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"出":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{},",":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.6666666666666665}}}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},")":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}},"p":{"1":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"2":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.046875}},"o":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},"s":{"docs":{},",":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"i":{"docs":{},"t":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}}}},"]":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}},"docs":{}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":3.333333333333333}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":2.5}}}}}}}}},"k":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":5}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}},"[":{"docs":{},"]":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"（":{"docs":{},"v":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":3.333333333333333}},"e":{"docs":{},"问":{"docs":{},"题":{"docs":{},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"有":{"docs":{},"：":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":2.5},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6666666666666665}}}},"t":{"docs":{},"h":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":2.5}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.038461538461538464}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.03125},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01639344262295082}}},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"d":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.03669724770642202}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},")":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}},"p":{"docs":{},"o":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101}},"s":{"docs":{},")":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}},"]":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":2}},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"y":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"b":{"docs":{},")":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}},"i":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.03278688524590164},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.03875968992248062}}}}}},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}},";":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.02185792349726776},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},")":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}},";":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"2":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"docs":{}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.03825136612021858},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.06201550387596899}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.0273224043715847}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}},"r":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}}},"2":{"docs":{},"]":{"docs":{},".":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}}},"docs":{},"e":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},"s":{"docs":{},")":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}},"[":{"0":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}},"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{},"]":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}},"docs":{}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}},"docs":{}}}}}}}}}}},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.05},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.03508771929824561},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.05714285714285714},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.046153846153846156},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.09259259259259259},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.061224489795918366},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.05263157894736842},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.08333333333333333},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.07692307692307693},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.03125},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.02247191011235955},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.03076923076923077},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0392156862745098},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.041666666666666664},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.04},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.075},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.05714285714285714},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.047619047619047616},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.03076923076923077},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.058333333333333334},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.027777777777777776},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.037037037037037035},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.03734439834024896},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.01764705882352941},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01639344262295082},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333}}}}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":2.5}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":3.333333333333333}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}},"]":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}},";":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}}},"m":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":2}}}},"w":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385}},"+":{"docs":{},"d":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}}},"u":{"docs":{},"t":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":2.5}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"起":{"docs":{},"点":{"docs":{},"或":{"docs":{},"终":{"docs":{},"点":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"进":{"docs":{},"行":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"，":{"docs":{},"当":{"docs":{},"某":{"docs":{},"个":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"在":{"docs":{},"终":{"docs":{},"点":{"docs":{},"所":{"docs":{},"包":{"docs":{},"括":{"docs":{},"的":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"中":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}},"，":{"docs":{},"确":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"两":{"docs":{},"个":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"之":{"docs":{},"间":{"docs":{},"有":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},",":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"则":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"是":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":2}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":2.5}}}},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},":":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}},"v":{"docs":{},"a":{"docs":{},"r":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}},"l":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}},"i":{"docs":{},"d":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":2.5}}}},"u":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},"e":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{},"有":{"docs":{},"点":{"docs":{},"狸":{"docs":{},"猫":{"docs":{},"换":{"docs":{},"太":{"docs":{},"子":{"docs":{},"的":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"挺":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"。":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},"e":{"docs":{},"h":{"docs":{},"i":{"docs":{},"c":{"docs":{},"l":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.023255813953488372}},"e":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}}}}}}}}}},"s":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.023255813953488372}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":5.083333333333333}}}}}},"{":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.08333333333333333},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.06140350877192982},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.08571428571428572},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.06153846153846154},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.09259259259259259},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.06666666666666667},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.10204081632653061},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.11267605633802817},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.10526315789473684},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.09166666666666666},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.07692307692307693},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.075},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.078125},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.050505050505050504},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.04878048780487805},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.046511627906976744},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.05},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.07272727272727272},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.056179775280898875},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.08461538461538462},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.05084745762711865},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.058823529411764705},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.08333333333333333},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.05504587155963303},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.09},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.1},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.08571428571428572},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.09523809523809523},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.06153846153846154},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.08333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.05},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.05},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.07407407407407407},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.05394190871369295},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.034482758620689655},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.1},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.07650273224043716},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.08527131782945736}},"}":{"docs":{},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.015503875968992248}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"}":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"}":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}},"[":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"'":{"docs":{},")":{"docs":{},"]":{"docs":{},":":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"}":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"}":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666}}},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"[":{"docs":{},"]":{"docs":{},"}":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{},"}":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}}}}}}},"}":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.075},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.02631578947368421},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.05714285714285714},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.06153846153846154},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.07407407407407407},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.061224489795918366},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.09859154929577464},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.09210526315789473},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.06666666666666667},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.057692307692307696},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.075},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.078125},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.06741573033707865},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.07692307692307693},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.09803921568627451},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.08333333333333333},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.03669724770642202},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.09},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.05},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.09523809523809523},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.046153846153846156},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.041666666666666664},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.03333333333333333},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.05555555555555555},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.024896265560165973},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.07647058823529412},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.07650273224043716},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.05426356589147287}},";":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.016666666666666666},"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.03333333333333333},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.029045643153526972},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},")":{"docs":{},";":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"道":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"略":{"docs":{},"有":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"多":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"初":{"docs":{},"始":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"\b":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"，":{"docs":{},"作":{"docs":{},"用":{"docs":{},"是":{"docs":{},"记":{"docs":{},"录":{"docs":{},"从":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"到":{"docs":{},"最":{"docs":{},"右":{"docs":{},"边":{"docs":{},"这":{"docs":{},"个":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"多":{"docs":{},"次":{"docs":{},"使":{"docs":{},"用":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"次":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"起":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"函":{"docs":{},"数":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"任":{"docs":{},"何":{"docs":{},"值":{"docs":{},"，":{"docs":{},"在":{"docs":{},"主":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"设":{"docs":{},"计":{"docs":{},"数":{"docs":{},"器":{"docs":{},"即":{"docs":{},"可":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"是":{"docs":{},"贴":{"docs":{},"出":{"docs":{},"来":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"吧":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}}}}}}},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"一":{"docs":{},"看":{"docs":{},"就":{"docs":{},"是":{"docs":{},"无":{"docs":{},"脑":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"，":{"docs":{},"结":{"docs":{},"果":{"docs":{},"超":{"docs":{},"时":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{},"。":{"docs":{},"果":{"docs":{},"然":{"docs":{},"这":{"docs":{},"题":{"docs":{},"没":{"docs":{},"想":{"docs":{},"像":{"docs":{},"中":{"docs":{},"简":{"docs":{},"单":{"docs":{},"。":{"docs":{"dynamic-programming/518-coin-change2.html":{"ref":"dynamic-programming/518-coin-change2.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"人":{"docs":{},"的":{"docs":{},"思":{"docs":{},"维":{"docs":{},"方":{"docs":{},"式":{"docs":{},"入":{"docs":{},"手":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"人":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"会":{"docs":{},"先":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"内":{"docs":{},"层":{"docs":{},"的":{"docs":{},"[":{"docs":{},"]":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"。":{"docs":{},"重":{"docs":{},"复":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"直":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"[":{"docs":{},"]":{"docs":{},"都":{"docs":{},"被":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"。":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"按":{"docs":{},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"，":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"顺":{"docs":{},"藤":{"docs":{},"摸":{"docs":{},"瓜":{"docs":{},"。":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}}}}}}}},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},",":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}},"和":{"2":{"0":{"0":{"docs":{},"题":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372}}}}}}}}},"，":{"6":{"9":{"4":{"docs":{},"非":{"docs":{},"常":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"在":{"docs":{},"于":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"docs":{},"每":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"9":{"7":{"docs":{},"非":{"docs":{},"常":{"docs":{},"像":{"docs":{},"，":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"这":{"docs":{},"里":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}},"4":{"9":{"6":{"docs":{},"基":{"docs":{},"本":{"docs":{},"一":{"docs":{},"样":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"先":{"docs":{},"把":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"为":{"docs":{},"原":{"docs":{},"来":{"docs":{},"的":{"docs":{},"一":{"docs":{},"倍":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"处":{"docs":{},"理":{"docs":{},"c":{"docs":{},"i":{"docs":{},"r":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"7":{"3":{"9":{"docs":{},"非":{"docs":{},"常":{"docs":{},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{},"都":{"docs":{},"是":{"docs":{},"要":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"9":{"4":{"7":{"docs":{},"题":{"docs":{},"很":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"图":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"所":{"docs":{},"有":{"docs":{},"连":{"docs":{},"通":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"的":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"也":{"docs":{},"有":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"性":{"docs":{},"，":{"docs":{},"使":{"docs":{},"代":{"docs":{},"码":{"docs":{},"简":{"docs":{},"化":{"docs":{},"：":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{},"其":{"docs":{},"它":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"题":{"docs":{},"目":{"docs":{},"非":{"docs":{},"常":{"docs":{},"类":{"docs":{},"似":{"docs":{},"。":{"docs":{},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"如":{"docs":{},"何":{"docs":{},"确":{"docs":{},"定":{"docs":{},"两":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"最":{"docs":{},"短":{"docs":{},"距":{"docs":{},"离":{"docs":{},"。":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"常":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"将":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"转":{"docs":{},"化":{"docs":{},"为":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"而":{"docs":{},"且":{"docs":{},"这":{"docs":{},"个":{"docs":{},"解":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"需":{"docs":{},"要":{"docs":{},"向":{"docs":{},"上":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"上":{"docs":{},"。":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"意":{"docs":{},"思":{"docs":{},"，":{"docs":{},"难":{"docs":{},"度":{"docs":{},"不":{"docs":{},"大":{"docs":{},"但":{"docs":{},"是":{"docs":{},"想":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}},"乍":{"docs":{},"一":{"docs":{},"看":{"docs":{},"没":{"docs":{},"有":{"docs":{},"头":{"docs":{},"绪":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"不":{"docs":{},"难":{"docs":{},"。":{"docs":{},"找":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"是":{"docs":{},"往":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"上":{"docs":{},"想":{"docs":{},"，":{"docs":{},"检":{"docs":{},"查":{"docs":{},"子":{"docs":{},"树":{"docs":{},"结":{"docs":{},"构":{"docs":{},"是":{"docs":{},"否":{"docs":{},"相":{"docs":{},"同":{"docs":{},"应":{"docs":{},"该":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"如":{"docs":{},"何":{"docs":{},"对":{"docs":{},"子":{"docs":{},"树":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"得":{"docs":{},"到":{"docs":{},"该":{"docs":{},"子":{"docs":{},"树":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"看":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"。":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"似":{"docs":{},"乎":{"docs":{},"只":{"docs":{},"能":{"docs":{},"用":{"docs":{},"双":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"求":{"docs":{},"解":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"想":{"docs":{},"想":{"docs":{},"发":{"docs":{},"现":{"docs":{},"是":{"docs":{},"一":{"docs":{},"道":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"\u001d":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"\b":{"docs":{},"需":{"docs":{},"要":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"的":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"最":{"docs":{},"大":{"docs":{},"。":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"点":{"docs":{},"难":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"还":{"docs":{},"是":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"的":{"docs":{},"变":{"docs":{},"种":{"docs":{},"。":{"docs":{},"不":{"docs":{},"同":{"docs":{},"于":{"docs":{},"一":{"docs":{},"般":{"docs":{},"的":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"问":{"docs":{},"题":{"docs":{},"（":{"docs":{},"找":{"docs":{},"四":{"docs":{},"个":{"docs":{},"邻":{"docs":{},"接":{"docs":{},"点":{"docs":{},")":{"docs":{},",":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"写":{"docs":{},"法":{"docs":{},"不":{"docs":{},"难":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"思":{"docs":{},"路":{"docs":{},"相":{"docs":{},"当":{"docs":{},"经":{"docs":{},"典":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"经":{"docs":{},"过":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"不":{"docs":{},"经":{"docs":{},"过":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"两":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"图":{"docs":{},"的":{"docs":{},"连":{"docs":{},"通":{"docs":{},"性":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"行":{"docs":{},"列":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"可":{"docs":{},"以":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"无":{"docs":{},"向":{"docs":{},"图":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"数":{"docs":{},"算":{"docs":{},"出":{"docs":{},"图":{"docs":{},"中":{"docs":{},"所":{"docs":{},"有":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"。":{"docs":{},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"每":{"docs":{},"次":{"docs":{},"出":{"docs":{},"发":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{},"不":{"docs":{},"要":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"删":{"docs":{},"除":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"每":{"docs":{},"个":{"docs":{},"连":{"docs":{},"通":{"docs":{},"子":{"docs":{},"图":{"docs":{},"需":{"docs":{},"要":{"docs":{},"留":{"docs":{},"下":{"docs":{},"至":{"docs":{},"少":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"不":{"docs":{},"论":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"规":{"docs":{},"则":{"docs":{},"下":{"docs":{},"导":{"docs":{},"致":{"docs":{},"两":{"docs":{},"点":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"先":{"docs":{},"构":{"docs":{},"造":{"docs":{},"出":{"docs":{},"a":{"docs":{},"d":{"docs":{},"j":{"docs":{},"a":{"docs":{},"c":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"道":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"关":{"docs":{},"心":{"docs":{},"对":{"docs":{},"于":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"，":{"docs":{},"它":{"docs":{},"首":{"docs":{},"次":{"docs":{},"和":{"docs":{},"末":{"docs":{},"次":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"依":{"docs":{},"次":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"点":{"docs":{},"难":{"docs":{},"懂":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"像":{"docs":{},"其":{"docs":{},"它":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"的":{"docs":{},"题":{"docs":{},"那":{"docs":{},"样":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"作":{"docs":{},"为":{"docs":{},"输":{"docs":{},"入":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"具":{"docs":{},"有":{"docs":{},"自":{"docs":{},"学":{"docs":{},"习":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"慢":{"docs":{},"探":{"docs":{},"索":{"docs":{},"地":{"docs":{},"图":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"只":{"docs":{},"有":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"。":{"docs":{},"明":{"docs":{},"白":{"docs":{},"这":{"docs":{},"个":{"docs":{},"以":{"docs":{},"后":{"docs":{},"思":{"docs":{},"路":{"docs":{},"还":{"docs":{},"是":{"docs":{},"很":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"docs":{},"：":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"：":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}},"是":{"docs":{},"一":{"docs":{},"道":{"docs":{},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"带":{"docs":{},"权":{"docs":{},"重":{"docs":{},"的":{"docs":{},"有":{"docs":{},"向":{"docs":{},"图":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"。":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"看":{"docs":{},"到":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"2":{"docs":{},"的":{"docs":{},"n":{"docs":{},"=":{"1":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"应":{"docs":{},"该":{"docs":{},"意":{"docs":{},"识":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"会":{"docs":{},"循":{"docs":{},"环":{"docs":{},"重":{"docs":{},"复":{"docs":{},"。":{"docs":{},"只":{"docs":{},"要":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"次":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"状":{"docs":{},"态":{"docs":{},"重":{"docs":{},"复":{"docs":{},"时":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"算":{"docs":{},"出":{"docs":{},"循":{"docs":{},"环":{"docs":{},"起":{"docs":{},"始":{"docs":{},"位":{"docs":{},"置":{"docs":{},"和":{"docs":{},"循":{"docs":{},"环":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"docs":{}}}}}}}}}}},"我":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"了":{"docs":{},"，":{"docs":{},"我":{"docs":{},"想":{"docs":{},"的":{"docs":{},"是":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"去":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"没":{"docs":{},"有":{"docs":{},"w":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}}}},"挺":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"，":{"docs":{},"基":{"docs":{},"本":{"docs":{},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"考":{"docs":{},"查":{"docs":{},"面":{"docs":{},"试":{"docs":{},"者":{"docs":{},"是":{"docs":{},"否":{"docs":{},"脑":{"docs":{},"子":{"docs":{},"够":{"docs":{},"聪":{"docs":{},"明":{"docs":{},"。":{"docs":{},"反":{"docs":{},"正":{"docs":{},"我":{"docs":{},"捣":{"docs":{},"鼓":{"docs":{},"了":{"docs":{},"半":{"docs":{},"天":{"docs":{},"也":{"docs":{},"没":{"docs":{},"想":{"docs":{},"到":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"分":{"docs":{},"析":{"docs":{},"是":{"docs":{},"根":{"docs":{},"据":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"里":{"docs":{},"的":{"docs":{},"最":{"docs":{},"佳":{"docs":{},"答":{"docs":{},"案":{"docs":{},"来":{"docs":{},"的":{"docs":{},"：":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"选":{"docs":{},"择":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"用":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"，":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"满":{"docs":{},"足":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"条":{"docs":{},"件":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"获":{"docs":{},"胜":{"docs":{},"条":{"docs":{},"件":{"docs":{},"是":{"docs":{},"某":{"docs":{},"一":{"docs":{},"行":{"docs":{},"/":{"docs":{},"列":{"docs":{},"/":{"docs":{},"主":{"docs":{},"副":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"全":{"docs":{},"部":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"一":{"docs":{},"行":{"docs":{},"/":{"docs":{},"列":{"docs":{},"/":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"位":{"docs":{},"选":{"docs":{},"手":{"docs":{},"的":{"docs":{},"棋":{"docs":{},"子":{"docs":{},"总":{"docs":{},"数":{"docs":{},"。":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"题":{"docs":{},"搞":{"docs":{},"了":{"docs":{},"我":{"docs":{},"好":{"docs":{},"久":{"docs":{},"才":{"docs":{},"通":{"docs":{},"过":{"docs":{},"，":{"docs":{},"思":{"docs":{},"路":{"docs":{},"比":{"docs":{},"较":{"docs":{},"直":{"docs":{},"接":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"介":{"docs":{},"于":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"思":{"docs":{},"路":{"docs":{},"还":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"代":{"docs":{},"码":{"docs":{},"量":{"docs":{},"大":{"docs":{},"一":{"docs":{},"点":{"docs":{},"，":{"docs":{},"一":{"docs":{},"次":{"docs":{},"a":{"docs":{},"c":{"docs":{},"有":{"docs":{},"难":{"docs":{},"度":{"docs":{},"。":{"docs":{},"基":{"docs":{},"本":{"docs":{},"思":{"docs":{},"路":{"docs":{},"是":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"维":{"docs":{},"二":{"docs":{},"维":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"都":{"docs":{},"很":{"docs":{},"经":{"docs":{},"典":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"记":{"docs":{},"住":{"docs":{},"结":{"docs":{},"论":{"docs":{},"：":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"个":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"读":{"docs":{},"出":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"能":{"docs":{},"一":{"docs":{},"次":{"docs":{},"性":{"docs":{},"把":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"全":{"docs":{},"部":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"然":{"docs":{},"后":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{},".":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"题":{"docs":{},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"想":{"docs":{},"到":{"docs":{},"d":{"docs":{},"p":{"docs":{},",":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}}}},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"勉":{"docs":{},"强":{"docs":{},"a":{"docs":{},"c":{"docs":{},",":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}},"仅":{"docs":{},"局":{"docs":{},"限":{"docs":{},"于":{"docs":{},"整":{"docs":{},"数":{"docs":{},"排":{"docs":{},"序":{"docs":{},"（":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"不":{"docs":{},"太":{"docs":{},"大":{"docs":{},"）":{"docs":{},"。":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"把":{"docs":{},"要":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"是":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},")":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"按":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"从":{"docs":{},"大":{"docs":{},"到":{"docs":{},"小":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"。":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"是":{"docs":{},"沿":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"一":{"docs":{},"直":{"docs":{},"走":{"docs":{},"下":{"docs":{},"去":{"docs":{},"直":{"docs":{},"到":{"docs":{},"走":{"docs":{},"不":{"docs":{},"动":{"docs":{},"。":{"docs":{},"在":{"docs":{},"处":{"docs":{},"理":{"docs":{},"完":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"它":{"docs":{},"标":{"docs":{},"记":{"docs":{},"为":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"题":{"docs":{},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"保":{"docs":{},"证":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}},"类":{"docs":{},"题":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"非":{"docs":{},"常":{"docs":{},"明":{"docs":{},"显":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"是":{"docs":{},"k":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}},"是":{"docs":{},"最":{"docs":{},"无":{"docs":{},"脑":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"把":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},"=":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}},"i":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},")":{"docs":{},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"g":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.06060606060606061},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.04878048780487805},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.046511627906976744},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.05},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.033707865168539325},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.023076923076923078},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"'":{"docs":{},"'":{"docs":{},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.043859649122807015},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.016666666666666666}}},")":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}},"[":{"docs":{},"'":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}},")":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}},"]":{"docs":{},"'":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"'":{"docs":{},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}},"d":{"docs":{},"'":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"l":{"docs":{},"'":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"r":{"docs":{},"'":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"u":{"docs":{},"'":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.03076923076923077},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}}},"j":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},")":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}},")":{"docs":{},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"只":{"docs":{},"入":{"docs":{},"队":{"docs":{},"一":{"docs":{},"次":{"docs":{},"（":{"docs":{},"不":{"docs":{},"能":{"docs":{},"重":{"docs":{},"复":{"docs":{},"）":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"不":{"docs":{},"可":{"docs":{},"以":{"docs":{},"无":{"docs":{},"脑":{"docs":{},"把":{"docs":{},"(":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}},"docs":{}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"更":{"docs":{},"巧":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"种":{"docs":{},"入":{"docs":{},"队":{"docs":{},"方":{"docs":{},"法":{"docs":{},"使":{"docs":{},"每":{"docs":{},"个":{"docs":{},"值":{"docs":{},"都":{"docs":{},"能":{"docs":{},"入":{"docs":{},"队":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{},";":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}},"+":{"1":{"docs":{},")":{"docs":{},"入":{"docs":{},"队":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}},"都":{"docs":{},"塞":{"docs":{},"进":{"docs":{},"去":{"docs":{},"。":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}},"docs":{}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"?":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}},"k":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.017543859649122806},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.68075117370892},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4383753501400558},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6781609195402298},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":2.0058823529411764}},")":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},"里":{"docs":{},"关":{"docs":{},"于":{"docs":{},"k":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{},"但":{"docs":{},"这":{"docs":{},"却":{"docs":{},"是":{"docs":{},"解":{"docs":{},"题":{"docs":{},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"。":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.07407407407407407}}},"e":{"docs":{},"y":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}},"s":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"h":{"docs":{},".":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},")":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}},"b":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}},"docs":{}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}},"docs":{}}}}}}}}}}}}},"p":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.01764705882352941}},")":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.039473684210526314},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},";":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.028169014084507043},"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.039473684210526314}}}},"[":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"]":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.03076923076923077}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"]":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"]":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"]":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"]":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"]":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.056338028169014086}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},",":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}}}}}}}}}},"。":{"docs":{},"下":{"docs":{},"次":{"docs":{},"即":{"docs":{},"使":{"docs":{},"对":{"docs":{},"角":{"docs":{},"线":{"docs":{},"上":{"docs":{},"的":{"docs":{},"点":{"docs":{},"也":{"docs":{},"连":{"docs":{},"通":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}},"或":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"以":{"docs":{},"后":{"docs":{},"查":{"docs":{},"询":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"是":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"是":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":2.5},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":2.025}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}}}}}},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}},"z":{"docs":{},"e":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":3.333333333333333}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}}}},"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},"[":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"y":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385}}}}}}},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385}}}},"y":{"docs":{},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}}}}}},"k":{"docs":{},"e":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":5}},"e":{"docs":{},":":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"设":{"docs":{},"计":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}},")":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}},";":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}},";":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}},"docs":{}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"a":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"y":{"docs":{},"l":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"t":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.02631578947368421},"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.02857142857142857},"intervals/763-partition-labels.html":{"ref":"intervals/763-partition-labels.html","tf":0.020833333333333332},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"j":{"docs":{},"+":{"1":{"docs":{},",":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}},"docs":{}}}}}}}}}}}}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}},"t":{"docs":{},"r":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}},")":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":3.333333333333333},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":2.5}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}},",":{"docs":{"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.03125},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}},",":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}},"t":{"docs":{},"e":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}},"=":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}},"[":{"docs":{},"(":{"docs":{},"n":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}},"i":{"docs":{},"c":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"c":{"docs":{},"k":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},";":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}}}}}}}}},"的":{"docs":{},"数":{"docs":{},"时":{"docs":{},"就":{"docs":{},"先":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},",":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}},"，":{"docs":{},"当":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}},":":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":0.08333333333333333}}}}}}}}}}}}},"p":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4285714285714284}},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"b":{"docs":{},"u":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"。":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":3.333333333333333}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":2.5}}}}}},"m":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665},"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":2.5576923076923075},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6666666666666665}},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"存":{"docs":{},"储":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}},")":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.07692307692307693}},";":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232}}}},";":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}},"i":{"docs":{},"t":{"docs":{},":":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}},"e":{"docs":{},"t":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}},")":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035}},";":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.037037037037037035}}}},".":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.025}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"k":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.03389830508474576}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":2.5083333333333333}}}}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"n":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"graph/947-moast-stones-removed-with-same-row-or-col.html":{"ref":"graph/947-moast-stones-removed-with-same-row-or-col.html","tf":1.6666666666666665}}}}},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":3.333333333333333}},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204}}}}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}},"(":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.016597510373443983}}}}}},",":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025}}},"r":{"docs":{},"c":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.0196078431372549}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":1.6666666666666665}},":":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}}}}},"u":{"docs":{},"l":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"o":{"docs":{},"t":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},"[":{"8":{"docs":{},"]":{"docs":{},"[":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"docs":{}}}},"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"x":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"m":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"y":{"docs":{},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}},"o":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"i":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}},")":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666}}}}}}},"n":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":2.5055555555555555}},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":1.6666666666666665}},"一":{"docs":{},"般":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"p":{"1":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"2":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":2.5},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.016666666666666666}},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4285714285714284}}}}}},"n":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}},"\"":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}}}}},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}},"论":{"docs":{},"坛":{"docs":{},"里":{"docs":{},"有":{"docs":{},"人":{"docs":{},"用":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"把":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"以":{"docs":{},"引":{"docs":{},"用":{"docs":{},"方":{"docs":{},"式":{"docs":{},"传":{"docs":{},"入":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"整":{"docs":{},"个":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"。":{"docs":{"string/394-decode-string.html":{"ref":"string/394-decode-string.html","tf":0.008771929824561403}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"维":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"]":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"是":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"[":{"docs":{},"b":{"docs":{},"l":{"docs":{},"x":{"1":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{}}}}}}}},"扩":{"docs":{},"展":{"docs":{},"法":{"docs":{},"：":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285}},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"开":{"docs":{},"始":{"docs":{},"左":{"docs":{},"右":{"docs":{},"扩":{"docs":{},"展":{"docs":{"string/647-palindromic-substrings.html":{"ref":"string/647-palindromic-substrings.html","tf":0.014285714285714285}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},")":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}},"s":{"docs":{},"t":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665},"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":2.5}}}},",":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}},"[":{"0":{"docs":{},"]":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}},")":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}},"1":{"docs":{},"]":{"docs":{},";":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}},"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"c":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"+":{"docs":{},"d":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"累":{"docs":{},"加":{"docs":{},"。":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"要":{"docs":{},"存":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"+":{"docs":{},"b":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{"hashmap/454-4-sum-2.html":{"ref":"hashmap/454-4-sum-2.html","tf":0.03333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":2},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.6666666666666665}}}}}},"t":{"docs":{},"e":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"f":{"docs":{},"s":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"第":{"docs":{},"k":{"docs":{},"层":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}}}}}}},":":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}},"a":{"docs":{},"g":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":3.333333333333333}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02},"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}}}}}},"i":{"docs":{},"d":{"docs":{},"g":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":3.333333333333333}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":2.5}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"j":{"docs":{},",":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}},"x":{"1":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}},"docs":{}},"y":{"1":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"2":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.0273224043715847}},"(":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}},";":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.015384615384615385},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01},"divide-and-conqueor/678-valid-parenthesis-string.html":{"ref":"divide-and-conqueor/678-valid-parenthesis-string.html","tf":0.025},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388},"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}},"e":{"docs":{},"e":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":2},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":1.6666666666666665},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665}},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}}}}},",":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}},".":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{},"是":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"设":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"起":{"docs":{},"点":{"docs":{},"为":{"docs":{},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"的":{"docs":{},"零":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"把":{"docs":{},"沿":{"docs":{},"路":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"来":{"docs":{},",":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"1":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"2":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{}},"y":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}}},"2":{"docs":{},"]":{"docs":{},".":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}}},"docs":{}}},"w":{"docs":{},"o":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":1.6666666666666665},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521}}}}}}},"c":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":2}}}},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":3.333333333333333}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"+":{"docs":{},"+":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}},";":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}},"]":{"docs":{},")":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.03125}}}}}}}}}}}}}},"e":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":2}}},"p":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":2}},"k":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"y":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}},")":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.03636363636363636}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}}}},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"[":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":3.333333333333333}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},")":{"docs":{},"]":{"docs":{},";":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{},"]":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"]":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},";":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.037037037037037035}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},"i":{"docs":{},"d":{"docs":{},"x":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}},"i":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.09259259259259259}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"k":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.016597510373443983}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"y":{"docs":{},")":{"docs":{},")":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"g":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.07407407407407407}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}},":":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}},"i":{"docs":{},"c":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":2}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{"design/tiny-url.html":{"ref":"design/tiny-url.html","tf":5}}}}}},"|":{"docs":{},"|":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385},"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"ref":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","tf":0.014084507042253521},"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.023076923076923078},"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.05555555555555555},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}},"从":{"docs":{},"左":{"docs":{},"向":{"docs":{},"右":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"n":{"docs":{},",":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}}}}}}},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"记":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"数":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"从":{"docs":{},"所":{"docs":{},"有":{"docs":{},"点":{"docs":{},"向":{"docs":{},"外":{"docs":{},"扩":{"docs":{},"张":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"碰":{"docs":{},"到":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"点":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"看":{"docs":{},"看":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"等":{"docs":{},"于":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}},"绝":{"docs":{},"对":{"docs":{},"值":{"docs":{},"排":{"docs":{},"序":{"docs":{},"序":{"docs":{},"列":{"docs":{"hashmap/954-array-of-doubled-pairs.html":{"ref":"hashmap/954-array-of-doubled-pairs.html","tf":0.015384615384615385}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"来":{"docs":{},"记":{"docs":{},"录":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"的":{"docs":{},"话":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"推":{"docs":{},"广":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"hashmap/653-two-sum-iv-binary-tree.html":{"ref":"hashmap/653-two-sum-iv-binary-tree.html","tf":0.018518518518518517}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"思":{"docs":{},"路":{"docs":{},"比":{"docs":{},"较":{"docs":{},"直":{"docs":{},"接":{"docs":{},"。":{"docs":{},"首":{"docs":{},"先":{"docs":{},"要":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"连":{"docs":{},"通":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"是":{"docs":{},"b":{"docs":{},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"。":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"无":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"存":{"docs":{},"储":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"信":{"docs":{},"息":{"docs":{},"。":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":2.5},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.022988505747126436},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}}},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"[":{"docs":{},"i":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}},"x":{"docs":{},",":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"[":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},",":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}}}}}},";":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"关":{"docs":{},"键":{"docs":{},"是":{"docs":{},"如":{"docs":{},"何":{"docs":{},"确":{"docs":{},"定":{"docs":{},"下":{"docs":{},"一":{"docs":{},"步":{"docs":{},"要":{"docs":{},"入":{"docs":{},"队":{"docs":{},"的":{"docs":{},"后":{"docs":{},"选":{"docs":{},"值":{"docs":{},"。":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}},">":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}},"里":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}},"：":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}},"也":{"docs":{},"会":{"docs":{},"给":{"docs":{},"面":{"docs":{},"试":{"docs":{},"官":{"docs":{},"留":{"docs":{},"下":{"docs":{},"好":{"docs":{},"印":{"docs":{},"象":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"更":{"docs":{},"符":{"docs":{},"合":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"。":{"docs":{"binary-tree/958-check-completeness-of-a-binary-tree.html":{"ref":"binary-tree/958-check-completeness-of-a-binary-tree.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"}":{"docs":{"binary-tree/652-find-duplicate-subtrees.html":{"ref":"binary-tree/652-find-duplicate-subtrees.html","tf":0.013157894736842105}},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"}":{"docs":{},"`":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"}":{"docs":{},"`":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"}":{"docs":{},",":{"docs":{},"$":{"docs":{},"{":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"}":{"docs":{},"`":{"docs":{},";":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"}":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}},"*":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.03333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.075},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.03888888888888889},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.13692946058091288}},"/":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}}}},"@":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.044444444444444446},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.025},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112},"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.02074688796680498}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.008298755186721992}}}}}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}},"d":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}},",":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.02}}},")":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}},"u":{"docs":{},"m":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665}}}}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":2.5},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":2},"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}},".":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.016666666666666666}}},"s":{"docs":{},"s":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":2}}}}}}}}}},".":{"docs":{},"g":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"design/vending-machine.html":{"ref":"design/vending-machine.html","tf":0.08333333333333333}}}}}}},"和":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"去":{"docs":{},"重":{"docs":{},"建":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}},"（":{"docs":{},"i":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}},"因":{"docs":{},"为":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"特":{"docs":{},"点":{"docs":{},"已":{"docs":{},"经":{"docs":{},"足":{"docs":{},"够":{"docs":{},"我":{"docs":{},"们":{"docs":{},"找":{"docs":{},"到":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"。":{"docs":{"binary-tree/449-serialize-and-deserialize-bst.html":{"ref":"binary-tree/449-serialize-and-deserialize-bst.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":2.5},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":2},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":2},"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":2.5},"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":3.333333333333333},"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":2},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":1.4383753501400558},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.011764705882352941}}},"?":{"docs":{"binary-tree/437-path-sum-3.html":{"ref":"binary-tree/437-path-sum-3.html","tf":0.019230769230769232},"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}},")":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025},"api/348-design-tic-tac-toe.html":{"ref":"api/348-design-tic-tac-toe.html","tf":0.018518518518518517},"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}},"一":{"docs":{},"开":{"docs":{},"始":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"都":{"docs":{},"在":{"docs":{},"最":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"首":{"docs":{},"先":{"docs":{},"试":{"docs":{},"图":{"docs":{},"尽":{"docs":{},"量":{"docs":{},"向":{"docs":{},"右":{"docs":{},"移":{"docs":{},"动":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"当":{"docs":{},"右":{"docs":{},"边":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"数":{"docs":{},"比":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"数":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"一":{"docs":{},"直":{"docs":{},"移":{"docs":{},"动":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{},"当":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"右":{"docs":{},"序":{"docs":{},"列":{"docs":{},"没":{"docs":{},"有":{"docs":{},"数":{"docs":{},"比":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"数":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"移":{"docs":{},"动":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"所":{"docs":{},"在":{"docs":{},"的":{"docs":{},"右":{"docs":{},"序":{"docs":{},"列":{"docs":{},"有":{"docs":{},"数":{"docs":{},"比":{"docs":{},"左":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"数":{"docs":{},"大":{"docs":{},"停":{"docs":{},"止":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"要":{"docs":{},"检":{"docs":{},"查":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"不":{"docs":{},"能":{"docs":{},"越":{"docs":{},"界":{"docs":{},"。":{"docs":{"two-pointer/962-max-width-ramp.html":{"ref":"two-pointer/962-max-width-ramp.html","tf":0.025}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"维":{"docs":{},"：":{"docs":{},"[":{"docs":{},"l":{"1":{"docs":{},",":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":0.058823529411764705}}}},"docs":{}}}}},"看":{"docs":{},"到":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}},"]":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}},";":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":2}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},":":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.020202020202020204},"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025},"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372},"graph/695-max-area-of-island.html":{"ref":"graph/695-max-area-of-island.html","tf":0.025}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":2.5153846153846153},"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":2}}}}}}}},"o":{"docs":{},"l":{"docs":{},"f":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":1.6666666666666665}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":2.511111111111111},"design/chess-game.html":{"ref":"design/chess-game.html","tf":5.0109289617486334},"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}},"'":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"1":{"docs":{},",":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"docs":{}}}}}}}}}},"?":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}},"分":{"docs":{},"治":{"docs":{},"去":{"docs":{},"了":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"有":{"docs":{},"点":{"docs":{},"像":{"docs":{},"取":{"docs":{},"石":{"docs":{},"子":{"docs":{},"的":{"docs":{},"题":{"docs":{},"。":{"docs":{},"用":{"docs":{},"分":{"docs":{},"治":{"docs":{},"法":{"docs":{},"写":{"docs":{},"很":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"还":{"docs":{},"超":{"docs":{},"时":{"docs":{},"了":{"docs":{},"。":{"docs":{},"没":{"docs":{},"办":{"docs":{},"法":{"docs":{},"重":{"docs":{},"新":{"docs":{},"想":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"那":{"docs":{},"就":{"docs":{},"是":{"docs":{},"买":{"docs":{},"入":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"，":{"docs":{},"卖":{"docs":{},"出":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"凭":{"docs":{},"空":{"docs":{},"增":{"docs":{},"加":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"检":{"docs":{},"查":{"docs":{},"是":{"docs":{},"否":{"docs":{},"能":{"docs":{},"买":{"docs":{},"到":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"分":{"docs":{},"数":{"docs":{},"。":{"docs":{},"本":{"docs":{},"质":{"docs":{},"上":{"docs":{},"还":{"docs":{},"是":{"docs":{},"一":{"docs":{},"道":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"题":{"docs":{},"。":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"每":{"docs":{},"次":{"docs":{},"买":{"docs":{},"入":{"docs":{},"前":{"docs":{},"要":{"docs":{},"检":{"docs":{},"察":{"docs":{},"是":{"docs":{},"否":{"docs":{},"当":{"docs":{},"前":{"docs":{},"的":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"数":{"docs":{},"足":{"docs":{},"够":{"docs":{},"买":{"docs":{},"入":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"two-pointer/948-bag-of-tokens.html":{"ref":"two-pointer/948-bag-of-tokens.html","tf":0.015625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.011111111111111112}},"+":{"docs":{},"d":{"docs":{},"x":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}},")":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}}}},"y":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775},"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556},"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.01092896174863388}},"+":{"docs":{},"d":{"docs":{},"y":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}},")":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693},"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}},"]":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}},")":{"docs":{},";":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}}}}},",":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}},"双":{"docs":{},"重":{"docs":{},"循":{"docs":{},"环":{"docs":{},"两":{"docs":{},"个":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"其":{"docs":{},"中":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"距":{"docs":{},"离":{"docs":{},"最":{"docs":{},"短":{"docs":{},"的":{"docs":{},"两":{"docs":{},"个":{"docs":{},"点":{"docs":{},"。":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}}}}}}}}}}}}}}}},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"做":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}},"新":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"要":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"的":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"直":{"docs":{},"接":{"docs":{},"的":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},":":{"docs":{"graph/934-shortest-bridge.html":{"ref":"graph/934-shortest-bridge.html","tf":0.010101010101010102}}}}}}}}}},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"额":{"docs":{},"外":{"docs":{},"定":{"docs":{},"义":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"修":{"docs":{},"改":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"判":{"docs":{},"断":{"docs":{},"一":{"docs":{},"个":{"docs":{},"点":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{"graph/200-number-of-islands.html":{"ref":"graph/200-number-of-islands.html","tf":0.024390243902439025}}}}}}}}}}}}}}},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"为":{"docs":{},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{"graph/694-number-of-distinct-islands.html":{"ref":"graph/694-number-of-distinct-islands.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"想":{"docs":{},"到":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},",":{"docs":{"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}}}},"两":{"docs":{},"两":{"docs":{},"比":{"docs":{},"较":{"docs":{},"b":{"docs":{},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}},"以":{"docs":{},"所":{"docs":{},"有":{"docs":{},"包":{"docs":{},"括":{"docs":{},"起":{"docs":{},"点":{"docs":{},"的":{"docs":{},"b":{"docs":{},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"前":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"b":{"docs":{},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}},"起":{"docs":{},"点":{"docs":{},"和":{"docs":{},"终":{"docs":{},"点":{"docs":{},"找":{"docs":{},"到":{"docs":{},"所":{"docs":{},"有":{"docs":{},"b":{"docs":{},"u":{"docs":{"graph/815-bus-routes.html":{"ref":"graph/815-bus-routes.html","tf":0.01818181818181818}}}}}}}}}}}}},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"列":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"进":{"docs":{},"行":{"docs":{},"分":{"docs":{},"组":{"docs":{},"，":{"docs":{},"建":{"docs":{},"立":{"docs":{},"递":{"docs":{},"推":{"docs":{},"关":{"docs":{},"系":{"docs":{},"。":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"与":{"docs":{},"树":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"，":{"docs":{},"方":{"docs":{},"便":{"docs":{},"根":{"docs":{},"据":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"树":{"docs":{},"高":{"docs":{},"找":{"docs":{},"到":{"docs":{},"树":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"扫":{"docs":{},"描":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"，":{"docs":{},"记":{"docs":{},"录":{"docs":{},"树":{"docs":{},"的":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"并":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"排":{"docs":{},"序":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}},"知":{"docs":{},"道":{"docs":{},"当":{"docs":{},"前":{"docs":{},"和":{"docs":{},"下":{"docs":{},"一":{"docs":{},"颗":{"docs":{},"树":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"用":{"docs":{},"b":{"docs":{},"f":{"docs":{},"s":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"短":{"docs":{},"距":{"docs":{},"离":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"无":{"docs":{},"法":{"docs":{},"到":{"docs":{},"达":{"docs":{},"，":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"高":{"docs":{},"度":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},",":{"docs":{"graph/675-cut-off-trees-for-golf-event.html":{"ref":"graph/675-cut-off-trees-for-golf-event.html","tf":0.011235955056179775}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{"graph/490-the-maze.html":{"ref":"graph/490-the-maze.html","tf":0.007692307692307693}},",":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"2":{"docs":{},")":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}},"docs":{}}}}}}}},"r":{"docs":{},"l":{"docs":{"design/tiny-url.html":{"ref":"design/tiny-url.html","tf":5}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"存":{"docs":{},"放":{"docs":{},"已":{"docs":{},"经":{"docs":{},"访":{"docs":{},"问":{"docs":{},"过":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"在":{"docs":{},"清":{"docs":{},"理":{"docs":{},"完":{"docs":{},"之":{"docs":{},"后":{"docs":{},"要":{"docs":{},"回":{"docs":{},"到":{"docs":{},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"方":{"docs":{},"向":{"docs":{},"也":{"docs":{},"要":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{"graph/489-robot-room-cleaner.html":{"ref":"graph/489-robot-room-cleaner.html","tf":0.01694915254237288}}}}}}}}}}}}}}}}}}}}}}}},"同":{"docs":{},"样":{"docs":{},"要":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"会":{"docs":{},"超":{"docs":{},"时":{"docs":{},"。":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"每":{"docs":{},"个":{"docs":{},"加":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"需":{"docs":{},"要":{"docs":{},"包":{"docs":{},"含":{"docs":{},"到":{"docs":{},"目":{"docs":{},"前":{"docs":{},"为":{"docs":{},"止":{"docs":{},"的":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"graph/787-cheapest-flights-within-K-stops.html":{"ref":"graph/787-cheapest-flights-within-K-stops.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"前":{"docs":{},"一":{"docs":{},"组":{"docs":{},"如":{"docs":{},"果":{"docs":{},"删":{"docs":{},"除":{"docs":{},"了":{"docs":{},"某":{"docs":{},"一":{"docs":{},"列":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"组":{"docs":{},"应":{"docs":{},"该":{"docs":{},"跳":{"docs":{},"过":{"docs":{},"那":{"docs":{},"一":{"docs":{},"列":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{},"。":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"state-loop/957-prison-cells-after-N-days.html":{"ref":"state-loop/957-prison-cells-after-N-days.html","tf":0.01834862385321101}}},"另":{"docs":{},"一":{"docs":{},"种":{"docs":{},"非":{"docs":{},"常":{"docs":{},"精":{"docs":{},"妙":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"是":{"docs":{},"建":{"docs":{},"立":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"数":{"docs":{},"组":{"docs":{},"存":{"docs":{},"储":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"排":{"docs":{},"序":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"，":{"docs":{},"则":{"docs":{},"再":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"看":{"docs":{},"看":{"docs":{},"哪":{"docs":{},"些":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"已":{"docs":{},"经":{"docs":{},"确":{"docs":{},"定":{"docs":{},"（":{"docs":{},"除":{"docs":{},"了":{"docs":{},"字":{"docs":{},"符":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"不":{"docs":{},"定":{"docs":{},"）":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"是":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"列":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"后":{"docs":{},"的":{"docs":{},"子":{"docs":{},"串":{"docs":{},"中":{"docs":{},"，":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"列":{"docs":{},"数":{"docs":{},"等":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"组":{"docs":{},"删":{"docs":{},"除":{"docs":{},"的":{"docs":{},"列":{"docs":{},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{},"。":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"排":{"docs":{},"高":{"docs":{},"个":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"高":{"docs":{},"个":{"docs":{},"排":{"docs":{},"过":{"docs":{},"后":{"docs":{},"，":{"docs":{},"低":{"docs":{},"个":{"docs":{},"不":{"docs":{},"论":{"docs":{},"放":{"docs":{},"哪":{"docs":{},"都":{"docs":{},"不":{"docs":{},"影":{"docs":{},"响":{"docs":{},"刚":{"docs":{},"才":{"docs":{},"高":{"docs":{},"个":{"docs":{},"的":{"docs":{},"k":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"删":{"docs":{},"除":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":0.008333333333333333}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"到":{"docs":{},"达":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"，":{"docs":{},"则":{"docs":{},"出":{"docs":{},"栈":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"栈":{"docs":{},"头":{"docs":{},"的":{"docs":{},"p":{"docs":{},"o":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"扫":{"docs":{},"描":{"docs":{},"一":{"docs":{},"列":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"逆":{"docs":{},"序":{"docs":{},"，":{"docs":{},"则":{"docs":{},"删":{"docs":{},"除":{"docs":{},"这":{"docs":{},"一":{"docs":{},"列":{"docs":{"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"ref":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","tf":0.01}}}}}}}}}}}}}}}}}}}}}},"前":{"docs":{},"一":{"docs":{},"句":{"docs":{},"好":{"docs":{},"像":{"docs":{},"是":{"docs":{},"废":{"docs":{},"话":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"(":{"docs":{},"h":{"docs":{},",":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{},"时":{"docs":{},"高":{"docs":{},"个":{"docs":{},"子":{"docs":{},"前":{"docs":{},"面":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"docs":{},"人":{"docs":{},"是":{"docs":{},"和":{"docs":{},"比":{"docs":{},"他":{"docs":{},"低":{"docs":{},"的":{"docs":{},"人":{"docs":{},"无":{"docs":{},"关":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"和":{"docs":{},"比":{"docs":{},"他":{"docs":{},"高":{"docs":{},"或":{"docs":{},"一":{"docs":{},"样":{"docs":{},"高":{"docs":{},"的":{"docs":{},"人":{"docs":{},"有":{"docs":{},"关":{"docs":{},"。":{"docs":{"array/406-queue-reconstruction-by-height.html":{"ref":"array/406-queue-reconstruction-by-height.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"geometry/836-rectange-overlap.html":{"ref":"geometry/836-rectange-overlap.html","tf":3.4509803921568625}}}}},".":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}},"(":{"1":{"docs":{},")":{"docs":{"api/380-insert-delete-getrandom-o1.html":{"ref":"api/380-insert-delete-getrandom-o1.html","tf":2}}}},"docs":{}}},"再":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"。":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"是":{"docs":{},"把":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"本":{"docs":{},"身":{"docs":{},"。":{"docs":{"stack/739-daily-temperatures.html":{"ref":"stack/739-daily-temperatures.html","tf":0.015873015873015872},"stack/496-next-greater-element-1.html":{"ref":"stack/496-next-greater-element-1.html","tf":0.015384615384615385}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.012448132780082987}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"stack/503-next-greater-element-2.html":{"ref":"stack/503-next-greater-element-2.html","tf":0.020833333333333332}}}},"docs":{}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"当":{"docs":{},"前":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"有":{"docs":{},"食":{"docs":{},"物":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"则":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"蛇":{"docs":{},"尾":{"docs":{},"。":{"docs":{},"判":{"docs":{},"断":{"docs":{},"当":{"docs":{},"前":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"是":{"docs":{},"否":{"docs":{},"和":{"docs":{},"蛇":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"则":{"docs":{},"压":{"docs":{},"入":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"作":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"蛇":{"docs":{},"头":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"头":{"docs":{},"部":{"docs":{},"是":{"docs":{},"否":{"docs":{},"已":{"docs":{},"经":{"docs":{},"越":{"docs":{},"界":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}},"移":{"docs":{},"动":{"docs":{},"头":{"docs":{},"部":{"docs":{},"到":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"api/353-design-snake-game.html":{"ref":"api/353-design-snake-game.html","tf":0.005555555555555556}}}}}}}}}}}}}},"则":{"docs":{},"把":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"取":{"docs":{},"出":{"docs":{},"入":{"docs":{},"栈":{"docs":{},".":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"是":{"docs":{},"离":{"docs":{},"不":{"docs":{},"开":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"的":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"存":{"docs":{},"当":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"及":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"。":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"既":{"docs":{},"然":{"docs":{},"是":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"：":{"docs":{},"[":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{"api/341-flatten-nested-list-iterator.html":{"ref":"api/341-flatten-nested-list-iterator.html","tf":0.004149377593360996}}}},"docs":{}}}}}},"\b":{"docs":{},"从":{"0":{"docs":{},"到":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}},"docs":{}}}}}},"docs":{}}},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"来":{"docs":{},"保":{"docs":{},"证":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}}}}}},"做":{"docs":{},"如":{"docs":{},"下":{"docs":{},"假":{"docs":{},"设":{"docs":{},"：":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"：":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"ref":"priority-queue/373-find-k-pairs-with-smallest-sums.html","tf":0.011494252873563218}}}}}}}}}}}},"丢":{"docs":{},"到":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"priority-queue/347-top-K-frequent-elements.html":{"ref":"priority-queue/347-top-K-frequent-elements.html","tf":0.0058823529411764705}}}}}}}}}}}},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"设":{"docs":{},"计":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"design/chess-game.html":{"ref":"design/chess-game.html","tf":0.00546448087431694}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"design/deck-of-cards.html":{"ref":"design/deck-of-cards.html","tf":0.03125}}}}}}}},"如":{"docs":{},"何":{"docs":{},"设":{"docs":{},"计":{"docs":{},"一":{"docs":{},"个":{"docs":{},"停":{"docs":{},"车":{"docs":{},"场":{"docs":{},"？":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"停":{"docs":{},"车":{"docs":{},"场":{"docs":{},"可":{"docs":{},"以":{"docs":{},"停":{"docs":{},"摩":{"docs":{},"托":{"docs":{},"车":{"docs":{},"，":{"docs":{},"小":{"docs":{},"轿":{"docs":{},"车":{"docs":{},"和":{"docs":{},"公":{"docs":{},"交":{"docs":{},"车":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}},"有":{"docs":{},"多":{"docs":{},"层":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"有":{"docs":{},"多":{"docs":{},"行":{"docs":{},"停":{"docs":{},"车":{"docs":{},"位":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}},"摩":{"docs":{},"托":{"docs":{},"车":{"docs":{},"位":{"docs":{},"，":{"docs":{},"紧":{"docs":{},"凑":{"docs":{},"型":{"docs":{},"车":{"docs":{},"位":{"docs":{},"，":{"docs":{},"和":{"docs":{},"大":{"docs":{},"型":{"docs":{},"车":{"docs":{},"位":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"交":{"docs":{},"车":{"docs":{},"只":{"docs":{},"能":{"docs":{},"停":{"docs":{},"在":{"docs":{},"同":{"docs":{},"一":{"docs":{},"行":{"docs":{},"中":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"五":{"docs":{},"个":{"docs":{},"大":{"docs":{},"型":{"docs":{},"车":{"docs":{},"位":{"docs":{},"上":{"docs":{},"，":{"docs":{},"不":{"docs":{},"能":{"docs":{},"停":{"docs":{},"在":{"docs":{},"小":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"小":{"docs":{},"轿":{"docs":{},"车":{"docs":{},"可":{"docs":{},"以":{"docs":{},"停":{"docs":{},"在":{"docs":{},"紧":{"docs":{},"凑":{"docs":{},"型":{"docs":{},"车":{"docs":{},"位":{"docs":{},"和":{"docs":{},"大":{"docs":{},"型":{"docs":{},"车":{"docs":{},"位":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}},"摩":{"docs":{},"托":{"docs":{},"车":{"docs":{},"可":{"docs":{},"以":{"docs":{},"停":{"docs":{},"在":{"docs":{},"任":{"docs":{},"何":{"docs":{},"位":{"docs":{},"置":{"docs":{"design/parking-lot.html":{"ref":"design/parking-lot.html","tf":0.007751937984496124}}}}}}}}}}}}}},"length":2074},"corpusTokens":["\b从0到len1","!=","!==","!hasgap(currlevel);","!isnan(s[k]))","!visited[x][y];","%","&&","'')","'';","'['","'[')","']'","'d'","'d')","'l'","'l')","'null';","'r'","'u'","'u')","(!(doubl","(!(val","(!arr[freq])","(!canfitvehicle(v))","(!map.containskey(num))","(!map.get(root))","(!piece.validmove(this,","(!shoulddelete)","(!this.isvalid(this.x,","(!this.process(this.x,","(;pos[0]","(a[0]","(abstract","(amount","(arr.length","(arr[i])","(board.getwin())","(code","(curr","(curr.isinteger())","(currlevel.filter(a","(data","(deletedlevels.has(level))","(direct","(end","(forest[0][0]","(i","(i+1","(i.hasnext())","(int","(isbottom(currlevel))","(j+1","(k","(left","(len","(len1","(len2","(let","(map.entri","(map[key].length","(maze[start[0]][start[1]]","(n","(nextstatestr","(num","(numbus","(piece.getclass().getname().equals(\"king\"))","(player","(po","(queue.length","(right","(root","(root.left","(root.right","(root.val","(row","(s","(set.has(code))","(set.has(root.val))","(spot[cmd.desx][cmd.desy]","(src","(stack.length","(start","(t[i]","(this.hasnext())","(this.rowcount[play","(this.stack.length","(tokens[end","(true)","(username,","(val","(vehicles","(x","(x,","(囧)",")","*","*/","+","+=","...","...nums.slice(0,","/**","//","0","0%","0)","0);","0)先统一入队","0,","0:","0;","0]","0]);","0];","0]];","0};","0。","1","1)","1);","1)];","1,","1.","180,","180:","1;","1]","1])","1]);","1],","1];","1][0]","1][0]++;","1][1]","1][1]++","1][1]++;","1][col]","1][col]++;","1][j","1][row]","1][row]++;","1]]","1]])","1]];","1。之后每次只用把(i,","1，以避免回头的问题。","2","2*a[i];","2,","200","270:","270];","2;","2n就在hashmap中找到相应的数并减一,","341:","347:","348:","353:","373:","380:","394:","3]]","406:","437:","449:","454:","489","490","496:","4sum","503:","518:","647:","652:","653:","675","678:","694","695","739:","763:","787","815","836:","863:","8x8","90,","90:","934:","947:","948:","954:","955:","957:","958:","962:",":",";","=","==","===","=>",">",">${left}",">${right}`;",">${y}`;",">=","?","@constructor","@param","@return","@thi","[...map.get(root),","[...nums,","[0,","[0];","[1,0].","[1,0]]","[1,1],","[3,","[3,3]],","[[0,","[[1,","[[1,1],","[[[1,1],","[[nestedlist,","[[root]];","[];","[arr,","[blx2,","[cells];","[i,","[key];","[l2,","[left]);","[right]);","[root]);","[root];","[start];","[x,","]","`${root.val}","`${root.val},${dfs(root.left)}`;","`${root.val},${dfs(root.right)}`;","`${root.val},${left},${right}`;","`${x}","a.getvalue());","a.length;","a.push(i.next());","a.sort((a,","a.val);","a[0].length)","a[0];","a[1]","a[i+1][l].charcodeat(0))","a[i+1][level].charcodeat(0))","a[i]","a[i]);","accumcost","addcard","aliv","allow","alreadi","amount)","amount,","area","arr","arr.push(forest[i][j]);","arr.sort((a,","arr[freq]","arr[freq].push(key);","arr[pos].getinteger();","arr[pos];","array","array();","array(len).fill(","array(len);","array(len+1);","array(len1).fill(","arraylist<>();","array中最后一个数到要删除数的位置,","arr存储数据","b)","b);","b,","b.getvalue()","b[0]","b[0])","b[1];","b[j]，然后遍历c[i]+d[j]，如果存在于map中，则累加。要注意map的value要存a[i]+b[j]的次数，因为可能不同的i,j，它们的和是一样的。","bag","bagoftokensscor","beat","bfs:","bfs搜索第k层的所有节点","binari","bite","black","block","blocks.push([j,","blx1","bly1,","bly2,","board","board()","board();","board.executecommand(p);","board;","body.","boolean","boundari","break;","bridg","bst","bu","bucket","c,","call","canmove(command)","canreorderdoubl","card","cards:","card的那道看起来要难了不少。关键是每次遇到*就会有3个分支，这样总共的可能性是指数上升的。不考虑复杂度的问题，最直接的想法是分治。用一个counter统计左右括号出现次数的差。合法的字符串要求最终的count","cell","cells.length;","chang","cheapest","check","checkvalidstr","chess","class","class)","classes:","cleaner","cleanroom","clearspots()","club,","cmd","cmd.curx,","cmd.cury,","cmd.desx,","code","code;","coin","coins)","coins.length;","coins[i","col","col)","col+dy[i]","col,","column","command","command(input);","compact,","complet","const","contain","continue;","coordiat","coordin","copi","correspond","cost,","cost[curr+','+map[curr][j]]]);","cost[src+','+next],","cost。一开始超时，需要在入队前判断accumul","cost大，如果大就没有必要再入队了。","cost是否已经比当前的min","count","counter加二","countsubstr","creat","cross","curr","curr)","curr,","curr[0])","curr[0];","curr[1])]);","curr[1];","curr[1]]);","current","currlevel","cut","cutofftre","d","d)","daili","dailytemperatur","data","data.split(',');","day","dead","dealer","dealer)","deck","decod","decodestr","delet","deletedlevels)","deletedlevels);","deletedlevels.add(level);","deseri","design","dest)","dest[0]","dest[1])","destin","dfs(0,","dfs(left,","dfs(map,","dfs(pos,","dfs(right,","dfs(root)","dfs(root);","dfs(root,","dfs(root.left);","dfs(root.left,","dfs(root.right);","dfs(root.right,","dfs:","dfs建立无向图的map","dfs找到一个island的所有点","dfs把两个islands的坐标分别记录下来，存在两个array中。","dfs每一个位置，如果未访问过则清理该位置","diamond,","dir)","direct","direction:","dispens","distanc","distancek","distinct","doubl","down","dp","dp:","dp[i","dp[i][j","dp[i][j]","dp[len][amount];","dst)","dst,","dsty))","duplic","e,","e.g","element","element.","elementss","empti","encod","end","end)","end,","entri","enum","event","executecommand(play","false;","favailablespots;","ffloor","ffloor;","final","find","findcheapestpric","findduplicatesubtre","findtarget","first","flag","flatten","flight","flights,","floor,","floor;","fnumberofrow","fnumberofrows;","food","food)","food;","forest.length;","forest[0].length;","foursumcount","free也不容易。如果思路清晰则代码会非常简洁。","freq","freq)","freq);","frequent","fromx,","fromy,","fspotsperrow","fspotsperrow;","function","function()","function(a)","function(a,","function(amount,","function(cells,","function(data)","function(direction)","function(forest)","function(grid)","function(maze,","function(n,","function(nestedlist)","function(nums)","function(nums,","function(nums1,","function(people)","function(robot)","function(root)","function(root,","function(routes,","function(row,","function(s)","function(stones)","function(t)","function(tokens,","function(val)","function(width,","game","game'","game(username1,","game?","getnextcell(cells)","getnextcell(cells);","getpoints(tokens,","getrandom","getvalue:","golf","greater","grid.length;","grid[0].length;","grid[i][j]","hand","hashmap<>();","haspath","heart,","height","height,","height;","helper(a,","helper(arr)","helper(arr);","helper(coins,","helper(robot,","helper(root,","helper(root.left,","helper(root.right,","helper(s,","helper(str,","here.","hold","holds,","i);","i++;","i;","i=","i[0]","i[1]","i]);","ii","iii","implement","init():","init(play","initi","input","insert","int","int[]","int[]{nums1[i],","integ","integer,","interfac","intervals.map(i","intervals.pop();","intervals.push([curr[0],","intervals.push([last[0],","interval的长度。","interval，最后返回merg","introduct","iscompletetre","island","islands很像，唯一的区别就是要检查island的形状。难点在于如何给形状编码。因为每次df","isvalidmove(board,","it,","iter","iterave四个方向，如果可以移动到下个位置，则dfs之，如果不行，转90度继续尝试","iv","j","j)","j));","j)只入队一次（不能重复），所以不可以无脑把(i+1,","j)只入队一次，更巧妙的方法是设计一种入队方法使每个值都能入队一次。","j+1)入队即可。","j+1)都塞进去。","j];","jack?","k","k)","k)里关于k的定义。但这却是解题的关键。","k,","key","ksmallestpairs(int[]","l1","label","large,","leetcod","left","left++;","left,","left]);","len","len)","len1","len2","len;","level","level(int","level++;","level+1,","level,","level.spotfreed();","list","list.","lists.","live:","lot","machin","machine:","machine的角度来考虑设计","make","map","map)","map);","map,","map.entryset())","map.get(num)","map.put(num,","map.set(left,","map.set(right,","map.set(root,","map[a[i]]","map[code]","map[code].push(root);","map[double]","map[forest[i][j]]","map[key];","map[nextstatestr]","map[nextstatestr];","map[num]","map[num]++;","map[s[i]];","map。下次即使对角线上的点也连通，也可以用这种方法。","map或set，方便以后查询","map的key是数据值，value是对应的arr的下标","match","math.abs(a)","math.abs(b));","math.max(last[1],","math.max(max[i+1],","math.max(maxindex,","max","max;","max[i]","max[right])","maxareaofisland","maxindex","maxindex;","maxwidthramp","maze","maze.length;","maze[0].length;","maze[dest[0]][dest[1]]","maze[i][y]","maze[x][i]","maze[x][y]","mean","merchandis","meta","method,","min","min)","min);","min;","min[0])","mindeletions","motocyl","motospot","move","move.","movepiece()","n","n)","n,","nest","nestedinteg","nestedinteger()","nestediter","nestediterator(nestedlist),","nestediterator.prototype.hasnext","nestediterator.prototype.next","nestedlist","new","next","next,","next[0]","next[len","nextcol","nextdir","nextgreaterel","nextlevel","nextrow","nextstat","nextstate.join('');","nextstate;","nextstatestr","node","null","null)","null).length","null;","null之间。为了思路清晰，最好能定义单独的函数来作判断，比如判断是否是最后一层，判断最后一层是否有gap。这样书写可以保证面试时思路集中在某一个具体问题上，不容易出bug,","num","number","number.max_safe_integ","numberofrows,","numberofrows;","numbus","numbusestodestin","numdistinctisland","numisland","nums)","nums,","nums.length;","nums1,","nums1.length;","nums1[a[0]]","nums1[b[0]]","nums2)","nums2,","nums2.length;","nums2[a[1]]","nums2[b[1]]);","nums2[i])","nums2[j]});","nums2[stack[stack.length","nums[i])","nums[stack[stack.length","o(1)","over","over.","overlap","p","p)","p.addcommand(cmd);","p.getcurrentcommand(p);","p.removecurrentcmd();","p1","p1;","p2","p2;","pair","palindrom","palindrome问题常见的方法有：","parenthesi","park","park(parkingspot","park(vehicl","parkingspot","parkingspot[]","parkingspots.add(spot);","parkvehicle（vehicl","parseint(arr[0]);","parseint(s.substring(k+1,","partit","partitionlabel","path","pathsum","pathsum(root.left,","pathsum(root.right,","pathsumfrom(root,","pathsumfrom(root.left,","pathsumfrom(root.right,","people.length;","period","periodstart","periodstart)","periodstartpo","periodstartpos)","periodstartpos];","piec","piece.color)","player","player(username1);","player(username2);","player)","player;","po","points++;","points;","pos)","pos);","pos,","pos;","pos]","posit","previdx","previdx;","prioriti","priorityqueue<>((a,","priorityqueue<>((a,b)","prison","prisonafternday","privat","process(p1);","process(p2);","process(play","protect","public","queue","queue.length;","queue.offer(entry);","queue.poll();","queue.pop();","queue.unshift([i","queue.unshift([map[curr][j],","queue.unshift([x,","queue;","queue>","queue来解决，关键是如何确定下一步要入队的后选值。","queue里，然后弹出前k个","queue：","r1],","r2].","ramp","random","randomizedset","randomizedset.prototype.getrandom","randomizedset.prototype.insert","randomizedset.prototype.remov","rank:","re","reconstruct","reconstructqueu","rectangl","remov","removepiece()","removeston","removevehicle()","res)","res);","res++;","res.add(new","res.add(nums[0]);","res.push(map[key][0]);","res;","res[0]++;","res[0];","res[previdx]","return","return;","right","right,","right]);","robot","robot.clean();","room","root.left;","root.right","root.right;","root.val)","root.val);","rout","routes.length;","routes包含起点或终点","routes开始进行bfs，当某个route在终点所包括的routes中，返回当前的level","route建立stop","route，确定是否两个route之间有相同的stop,如果有则这两个routes是连通的","row","row+dx[i]","s,","s.length;","s.substring(j+1,","s[j]","same","score","score)","screen","search","second","sendcard","serial","set","set();","set)","set);","set,","set.","set.add(code);","set.add(k","shortest","shortestbridg","shoulddelet","shuffl","singl","size","size()","smallest","smallest一般都可以用prior","snake","snake.","snakegam","snakegame.prototype.isvalid","snakegame.prototype.mov","sort","sort:","spade","specifi","specul","spot","spot();","spot)","spot[8][8];","spot[][]","spot[cmd.desx][cmd.desy].color","spot[cmd.desx][cmd.desy].occupy(piece);","spots;","spotsnum()","spotsperrow)","spotsperrow;","src,","stack","stack.pop();","stack.push(i);","stack:","stack的数时就先pop,","stack，当遇到破坏min","start","start,","start;","startgame()","state","states.length","states.push(nextstate);","states=","states[(n","static","stone","stones.length;","stop","stop，而是bus/route。","str","str,","str.length)","str.length;","string","string(root.val);","structur","substr","subtre","suit:","sum","sum)","sum);","sum;","sum本质上是一样的，用hashmap存储","system.out.println(\"p1","system.out.println(\"p2","t)","t.length;","t[stack[stack.length","tac","target,","temperatur","this.arr","this.arr.length","this.arr.length)];","this.arr.pop();","this.arr.push(val);","this.arr[math.floor(math.random()","this.arr[this.arr.length","this.arr[this.map[val]]","this.col","this.colcount[play","this.diagcount[play","this.food","this.foodidx","this.getinteg","this.getlist","this.i","this.isinteg","this.map","this.map)","this.map))","this.map[this.arr[this.arr.length","this.map[val]","this.map[val];","this.row","this.rowcount[play","this.snak","this.snake.length","this.stack","this.stack.pop();","this.stack.push([curr.getlist(),","this.stack[this.stack.length","this.x","this.x++;","this.y))","this.y++;","this:","tic","tictactoe.prototype.mov","tini","toe","token","tokens.length;","tokens[start++]);","tokens[start++];","tokens[start])","top","topkfrequ","topkfrequent(int[]","tox,","toy)","traverse的路径是相同的，可以设每一个island的起点为归一化的零点，然后把沿路访问过的归一化的节点坐标记录下来,","tree","tree,","tree.","tree的情况。","true","true;","trx1,","trx2,","try1],","try2].","two","up","up,","url","username2)","v)","v;","val","valid","valu","value，最后弹出array的最后一个数。有点狸猫换太子的意思，挺巧妙的。","var","vehicl","vehicle)","vehicle.park(this);","vehicle.size();","vehicles","vehiclesize.large)","vend","void","w","w,","width","width;","win","win\");","win;","within","word","x","x)","x+dx[j]","x,","x;","y","y)","y+dy[j]","y,","y;","y]","y]);","{","{[cells.join('')]:","{boolean}","{integer}","{nestedinteger[]}","{number[][]}","{number}","{string}","{treenode}","{};","||","}","});","};","一开始两个指针都在最左边，首先试图尽量向右移动右边的指针。当右边子序列有数比左指针的数大时，我们就可以一直移动右指针。当右指针所在的右序列没有数比左指针的数大时，开始移动左指针，直到右指针所在的右序列有数比左指针的数大停止。注意要检查右指针不能越界。","一看到","一维：[l1,","不需要额外定义visited矩阵，可以直接修改","丢到prioriti","两两比较bu","也会给面试官留下好印象，因为这样的代码更符合设计模式的要求。","二维dp[start][len]记录每个子串是否是palindrom","二维：[blx1,","从state","从左向右扫描序列，遇到n,","以所有包括起点的bu","但是删除不容易o(1)。考虑到这是一个set，数据的顺序无所谓，可以用一个map存储meta信息。","但是如果用hashmap来记录遇到点的值的话，可以推广到所有binari","但是思路比较直接。首先要看到这是一个graph的问题，连通的节点不是bu","停车场可以停摩托车，小轿车和公交车","停车场有多层，每层有多行停车位","停车场有摩托车位，紧凑型车位，和大型车位","公交车只能停在同一行中连续的五个大型车位上，不能停在小位置上","其中还需要一个辅助\b的array，作用是记录从当前位置到最右边这个子序列的最大值。","其实这也是一道经典的背包问题，略有不同的是这里面的元素可以被多次使用。注意初始状态的选择","再push。技巧是把index入栈而不是value本身。","分治去了，因为有点像取石子的题。用分治法写很麻烦，最后还超时了。没办法重新想思路，其实这道题有一个隐含条件，那就是买入最小的，卖出最大的，可以凭空增加power的数量，然后再检查是否能买到更多的分数。本质上还是一道双指针题。要注意每次买入前要检察是否当前的power数足够买入point.","则把list取出入栈.","判断是否当前cell有食物，如果没有则弹出蛇尾。判断当前cell是否和蛇collide，如果没有则压入cell作为新的蛇头","判断此时头部是否已经越界","利用前一步的stop","刷题总结","前一句好像是废话，因为这就是(h,","双重循环两个array,","另一种非常精妙的解法是建立boolean数组存储当前字符串是否已经是排序状态。","可以做如下假设：","可以用hashset来保证(i,","同样要prone优化，否则会超时。","和inorder去重建binari","和（i,","因为bst的特点已经足够我们找到左右子树。","基本上是离不开stack的，需要存当前遍历的array及index。","多次使用","如果当前是nestedlist,","如果没有逆序，则再扫描一遍，看看哪些字符串的顺序已经确定（除了字符相同的顺序不定）","定义一个set存放已经访问过的位置","对于每一列的字符进行分组，建立递推关系。","对每一个bu","对起点和终点找到所有bu","小轿车可以停在紧凑型车位和大型车位","就可以做为island的形状编码。","就应该想到stack,","建立树的高度与树的坐标之间的map，方便根据排序的树高找到树的位置","当pos到达array尾部，则出栈，并把栈头的po","当先排高个，因为高个排过后，低个不论放哪都不影响刚才高个的k","当删除一个数时，","当前列开始往后的子串中，删除的列数等于每一组删除的列数之和。","扩展法：","扩展法：从一个letter开始左右扩展","扫描array，记录树的高度，并从小到大排序","找到其中manhattan距离最短的两个点。","排序时高个子前面有几个人是和比他低的人无关的，只和比他高或一样高的人有关。","摩托车可以停在任何位置","方法是：可以把(i,","既然是iter","更好的做法是：","更新map的值，删除要弹出的key,","最直接的想法是:","来判断一个点是否已经访问过","每一个起点是一个新的island的开始，dfs函数不需要返回任何值，在主函数中设计数器即可","每个元素只能使用一次","用bfs从所有点向外扩张，直到碰到第二个island的点","用hashmap记录每个数出现的次数","看看counter是不是等于序列的长度","知道当前和下一颗树的位置，用bfs找到最短距离。如果无法到达，则返回","移动头部到下一个cell","绝对值排序序列","论坛里有人用dfs来解决这个问题，关键是把pos以引用方式传入，这样scan一遍就可以decode整个string。","输入：[[1,","还是贴出来dfs吧","这一题的难点是如何保证(i,","这个题一维二维的情况都很经典，可以记住结论：","这个题搞了我好久才通过，思路比较直接，就是bfs找到最后一层，然后判断是否存在null介于non","这个题虽然是hard，但是思路还是非常直接的，就是代码量大一点，一次ac有难度。基本思路是","这个题需要一个一个把数据读出，所以不能一次性把array全部flat然后存起来.","这是最无脑的解法，直接把(value,","这种方法仅局限于整数排序（range不太大）。思想是把要排序的数作为index（这里是freq)，然后按index从大到小扫描。","这种方法勉强ac,","这类题的特点非常明显，只要是k","这道题一看就是无脑dfs，结果超时。。。。果然这题没想像中简单。","这道题乍一看有点难，其实还是bfs的变种。不同于一般的island问题（找四个邻接点),","这道题乍一看没有什么思路，似乎只能用双重循环暴力求解。但是仔细想想发现是一道双指针滑动窗口\u001d题。我们\b需要维护一个滑动的窗口，使得窗口的大小尽量最大。","这道题乍一看没有头绪，其实不难。找duplicate肯定是往hashmap上想，检查子树结构是否相同应该考虑如何对子树编码，利用分治法在每个节点处得到该子树的编码，然后看是否在hashmap中。","这道题写法不难，但是思路相当经典。需要考虑经过root节点和不经过root节点两种情况。","这道题可以从人的思维方式入手。如果是人来解决这个问题，会先找到最内层的[]，然后decode之间的string。重复这个过程直到所有的[]都被decode。","这道题和2","这道题和200题number","这道题和200，694非常类似，关键在于计算出每个islands的节点个数。","这道题和297非常像，不同的是这里不需要preorder","这道题和496基本一样，只要先把array扩展为原来的一倍就可以处理circular的问题。","这道题和739非常类似。都是要维护一个min","这道题和947题很类似，本质上是图的连通性问题，利用dfs遍历所有连通在一起的点。这个题也有自己的特殊性，使代码简化：","这道题和其它的islands题目非常类似。难点在于如何确定两个islands之间的最短距离。","这道题当看到example2的n=100000000时，就应该意识到状态肯定会循环重复。只要记录每次的状态，直到检测到状态重复时，就可以算出循环起始位置和循环长度。","这道题我一开始想复杂了，我想的是用分治的思想去解决这个问题。","这道题挺有趣的，基本就是在考查面试者是否脑子够聪明。反正我捣鼓了半天也没想到最佳策略。下面的分析是根据discussion里的最佳答案来的：","这道题是一道经典的带权重的有向图问题。既可以用bfs，也可以用dfs来解决。","这道题有一点难懂，它不像其它graph的题那样有一个array作为输入，而是需要robot具有自学习能力，慢慢探索地图，所以只有robot一个input。明白这个以后思路还是很直接的：","这道题有两种解法：","这道题本质上是一道interval的问题。我们只关心对于一个letter，它首次和末次出现的位置，然后依次merg","这道题本质上是图的连通性问题。通过行列坐标可以构造出无向图。然后dfs遍历每一个节点，数算出图中所有连通的节点数。需要注意的是每次出发的起点不要计算，因为删除到最后每个连通子图需要留下至少一个点。这个方法是通用的，不论在什么规则下导致两点连通，我们都可以用这种方法先构造出adjac","这道题本质上是维护一个min","这道题比没有wild","这道题虽然是hard,","这道题虽然输入是bst,","这道题难点在于选择正确的数据结构。如果用array，getrandom和insert很容易o(1)，","这道题难点是如何快速的判断是否已经满足获胜条件。由于获胜条件是某一行/列/主副对角线全部是一种棋子，我们可以存储每一行/列/对角线，每一位选手的棋子总数。","这道题需要按绝对值排序，从小到大顺藤摸瓜。","这道题非常巧妙的将tree的问题转化为graph的问题，而且这个解法是通用的，可以用在所有需要向上搜索parent的问题上。","这道题非常有意思，难度不大但是想bug","这里的neighbor是沿一个方向一直走下去直到走不动。在处理完当前节点后可以把它标记为","这首题一开始想到dp,","遍历高度array,","问题：design","问题：如何设计一个停车场？","问题：设计chess","难点在于每个加入队列的节点需要包含到目前为止的accumul","难点是前一组如果删除了某一列，那么之后的组应该跳过那一列的检查。","首先扫描一列，如果存在逆序，则删除这一列","（在清理完之后要回到当前位置，方向也要相同）"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Leetcode 刷题总结\n"},"dynamic-programming/518-coin-change2.html":{"url":"dynamic-programming/518-coin-change2.html","title":"518: Coin Change 2","keywords":"","body":"这道题一看就是无脑dfs，结果超时。。。。果然这题没想像中简单。\n还是贴出来dfs吧\nvar change = function(amount, coins) {\n    const len = coins.length;\n    if (len === 0) {\n        if (amount === 0) {\n            return 1;\n        }\n        return 0;\n    }\n    const res = [0];\n    helper(coins, 0, 0, amount, res);\n    return res[0];\n};\n\nfunction helper(coins, pos, curr, amount, res) {\n    if (amount === curr) {\n        res[0]++;\n        return;\n    }\n    if (curr > amount) {\n        return;\n    }\n    for (let i = pos; i \n其实这也是一道经典的背包问题，略有不同的是这里面的元素可以被多次使用。注意初始状态的选择\nvar change = function(amount, coins) {\n    const len = coins.length;\n    if (len === 0) {\n        if (amount === 0) {\n            return 1;\n        }\n        return 0;\n    }\n    const dp = new Array(len+1);\n    for (let i = 0; i = coins[i-1]) {\n                // 多次使用\n                dp[i][j] += dp[i][j-coins[i-1]];\n                // 每个元素只能使用一次\n                // dp[i][j] += dp[i-1][j-coins[i-1]];\n            }\n        }\n    }\n    return dp[len][amount];\n};\n\n"},"string/394-decode-string.html":{"url":"string/394-decode-string.html","title":"394: Decode String","keywords":"","body":"这道题可以从人的思维方式入手。如果是人来解决这个问题，会先找到最内层的[]，然后decode之间的string。重复这个过程直到所有的[]都被decode。\nvar decodeString = function(s) {\n    let len = s.length;\n    if (len === 0) {\n        return '';\n    }\n    while (true) {\n        // find first ']' and corresponding matched '['\n        let i = 0; \n        len = s.length;\n        while (i = 0 && s[j] !== '[') j--;\n\n        const word = s.substring(j+1, i);\n        let k = j-1;\n        while (k >= 0 && !isNaN(s[k])) k--;\n        const number = parseInt(s.substring(k+1, j));\n        let str = '';\n        for (let ii = 0; ii \n论坛里有人用dfs来解决这个问题，关键是把pos以引用方式传入，这样scan一遍就可以decode整个string。\nvar decodeString = function(s) {\n    let len = s.length;\n    if (len === 0) {\n        return '';\n    }\n\n    const pos = [0];\n    return helper(s, pos);    \n};\n\nfunction helper(str, pos) {\n    const len = str.length;\n    if (pos === len) {\n        return '';\n    }\n\n    let num = 0;\n    let res = '';\n    for (;pos[0] \n"},"string/647-palindromic-substrings.html":{"url":"string/647-palindromic-substrings.html","title":"647: Palindromic Substrings","keywords":"","body":"Palindrome问题常见的方法有：\n\nDP: 二维dp[start][len]记录每个子串是否是palindrome\n扩展法：从一个letter开始左右扩展\n\nDP: \nvar countSubstrings = function(s) {\n    const len = s.length;\n    if (len === 0) {\n        return 0;\n    }\n    if (len === 1) {\n        return 1;\n    }\n    const dp = new Array(len);\n    for (let i = 0; i\n扩展法：\nvar countSubstrings = function(s) {\n    const len = s.length;\n    if (len === 0) {\n        return 0;\n    }\n    if (len === 1) {\n        return 1;\n    }\n    let res = 0;\n    for (let i = 0; i = 0 && right \n"},"hashmap/954-array-of-doubled-pairs.html":{"url":"hashmap/954-array-of-doubled-pairs.html","title":"954: Array of Doubled Pairs","keywords":"","body":"这道题需要按绝对值排序，从小到大顺藤摸瓜。\n\n用hashmap记录每个数出现的次数\n绝对值排序序列\n从左向右扫描序列，遇到n, 2n就在hashmap中找到相应的数并减一, counter加二\n看看counter是不是等于序列的长度\n\nvar canReorderDoubled = function(A) {\n    const len = A.length;\n    if (len === 0) {\n        return true;\n    }\n    A.sort((a, b) => Math.abs(a) - Math.abs(b));\n    const map = {};\n    for (let i = 0; i  0) {\n            map[A[i]]--;\n            const double = 2*A[i];\n            if (!(double in map) || map[double] === 0) {\n                return false;\n            }\n            map[double]--;\n            count += 2;\n        }\n    }\n    return count === len;\n\n};\n\n"},"hashmap/653-two-sum-iv-binary-tree.html":{"url":"hashmap/653-two-sum-iv-binary-tree.html","title":"653: Two Sum IV - Input is a BST","keywords":"","body":"这道题虽然输入是bst, 但是如果用hashmap来记录遇到点的值的话，可以推广到所有binary tree的情况。\nvar findTarget = function(root, k) {\n    if (root === null) {\n        return false;\n    }\n    const set = new Set();\n    return dfs(root, k, set);\n};\n\nfunction dfs(root, k, set) {\n    if (root === null) {\n        return false;\n    }\n    if (set.has(root.val)) {\n        return true;\n    }\n    set.add(k-root.val);\n    return dfs(root.left, k, set) || dfs(root.right, k, set);\n}\n\n"},"hashmap/454-4-sum-2.html":{"url":"hashmap/454-4-sum-2.html","title":"454: 4Sum II","keywords":"","body":"这道题和2 sum本质上是一样的，用hashmap存储-A[i]-B[j]，然后遍历C[i]+D[j]，如果存在于map中，则累加。要注意map的value要存A[i]+B[j]的次数，因为可能不同的i,j，它们的和是一样的。\nvar fourSumCount = function(A, B, C, D) {\n    const len = A.length;\n    if (len === 0) {\n        return 0;\n    }\n    const map = {};\n    for (let i = 0; i \n"},"binary-tree/958-check-completeness-of-a-binary-tree.html":{"url":"binary-tree/958-check-completeness-of-a-binary-tree.html","title":"958: Check Completeness of a Binary Tree","keywords":"","body":"这个题搞了我好久才通过，思路比较直接，就是BFS找到最后一层，然后判断是否存在NULL介于NON-NULL之间。为了思路清晰，最好能定义单独的函数来作判断，比如判断是否是最后一层，判断最后一层是否有gap。这样书写可以保证面试时思路集中在某一个具体问题上，不容易出bug, 也会给面试官留下好印象，因为这样的代码更符合设计模式的要求。\nvar isCompleteTree = function(root) {\n    if (root === null) {\n        return true;\n    }\n    const queue = [[root]];\n    while (queue.length > 0) {\n        const currLevel = queue.pop();\n        const nextLevel = [];\n        if (isBottom(currLevel)) {\n            return !hasGap(currLevel);\n        }\n        if (currLevel.filter(a => a === null).length > 0) {\n            return false;\n        }\n        for (let i = 0; i \n"},"binary-tree/863-all-nodes-distance-K-in-binary-tree.html":{"url":"binary-tree/863-all-nodes-distance-K-in-binary-tree.html","title":"863: All Nodes Distance K in Binary Tree","keywords":"","body":"这道题非常巧妙的将tree的问题转化为graph的问题，而且这个解法是通用的，可以用在所有需要向上搜索parent的问题上。\n\nDFS建立无向图的map\nBFS搜索第K层的所有节点\n\nvar distanceK = function(root, target, K) {\n    if (root === null || K  0 && level  a.val);\n};\n\nfunction dfs(root, map) {\n    const left = root.left;\n    const right = root.right;\n    if (left !== null) {\n        if (!map.get(root)) {\n            map.set(root, [left]);\n        } else {\n            map.set(root, [...map.get(root), left]);\n        }\n        map.set(left, [root]);\n        dfs(left, map);\n    }\n    if (right !== null) {\n        if (!map.get(root)) {\n            map.set(root, [right]);\n        } else {\n            map.set(root, [...map.get(root), right]);\n        }\n        map.set(right, [root]);\n        dfs(right, map);\n    }\n}\n\n"},"binary-tree/652-find-duplicate-subtrees.html":{"url":"binary-tree/652-find-duplicate-subtrees.html","title":"652: Find Duplicate Subtrees","keywords":"","body":"这道题乍一看没有头绪，其实不难。找duplicate肯定是往hashmap上想，检查子树结构是否相同应该考虑如何对子树编码，利用分治法在每个节点处得到该子树的编码，然后看是否在hashmap中。\nvar findDuplicateSubtrees = function(root) {\n    if (root === null) {\n        return [];\n    }\n    const map = {};\n    helper(root, map);\n    let res = [];\n    for (let key in map) {\n        if (map[key].length > 1) {\n            res.push(map[key][0]);\n        }\n    }\n    return res;\n};\n\nfunction helper(root, map) {\n    if (root === null) {\n        return 'null';\n    }\n    const left = helper(root.left, map);\n    const right = helper(root.right, map);\n    const code = `${root.val}->${left}->${right}`;\n    if (code in map) {\n        map[code].push(root);\n    } else {\n        map[code] = [root];\n    }\n    return code;\n}\n\n"},"binary-tree/449-serialize-and-deserialize-bst.html":{"url":"binary-tree/449-serialize-and-deserialize-bst.html","title":"449: Serialize and Deserialize BST","keywords":"","body":"这道题和297非常像，不同的是这里不需要preorder 和inorder去重建binary tree, 因为bst的特点已经足够我们找到左右子树。\nvar serialize = function(root) {\n    if (root === null) {\n        return '';\n    }\n    const res = dfs(root);\n    return res;\n};\n\nfunction dfs(root) {\n    if (root === null) {\n        return '';\n    }\n    if (root.left === null && root.right === null) {\n        return String(root.val);\n    }\n    if (root.left === null) {\n        return `${root.val},${dfs(root.right)}`;\n    }\n    if (root.right === null) {\n        return `${root.val},${dfs(root.left)}`;\n    }\n    const left = dfs(root.left);\n    const right = dfs(root.right);\n    return `${root.val},${left},${right}`;\n}\n\n/**\n * Decodes your encoded data to tree.\n *\n * @param {string} data\n * @return {TreeNode}\n */\nvar deserialize = function(data) {\n    if (data === '') {\n        return null;\n    }\n    const arr = data.split(',');\n    return helper(arr);\n};\n\nfunction helper(arr) {\n    if (arr.length === 0) {\n        return null;\n    }\n    const curr = parseInt(arr[0]);\n    let i = 1; \n    while (i \n"},"binary-tree/437-path-sum-3.html":{"url":"binary-tree/437-path-sum-3.html","title":"437: Path Sum III","keywords":"","body":"这道题写法不难，但是思路相当经典。需要考虑经过root节点和不经过root节点两种情况。\nvar pathSum = function(root, sum) {\n    if (root === null) {\n        return 0;\n    }\n    return pathSumFrom(root, sum) + pathSum(root.left, sum) + pathSum(root.right, sum);\n};\n\nfunction pathSumFrom(root, sum) {\n    if (root === null) {\n        return 0;\n    }\n    return (root.val === sum ? 1 : 0) + \n        pathSumFrom(root.left, sum - root.val) +\n        pathSumFrom(root.right, sum - root.val);\n}\n\n"},"two-pointer/962-max-width-ramp.html":{"url":"two-pointer/962-max-width-ramp.html","title":"962: Max Width Ramp","keywords":"","body":"这道题乍一看没有什么思路，似乎只能用双重循环暴力求解。但是仔细想想发现是一道双指针滑动窗口\u001d题。我们\b需要维护一个滑动的窗口，使得窗口的大小尽量最大。\n其中还需要一个辅助\b的array，作用是记录从当前位置到最右边这个子序列的最大值。\n一开始两个指针都在最左边，首先试图尽量向右移动右边的指针。当右边子序列有数比左指针的数大时，我们就可以一直移动右指针。当右指针所在的右序列没有数比左指针的数大时，开始移动左指针，直到右指针所在的右序列有数比左指针的数大停止。注意要检查右指针不能越界。\nvar maxWidthRamp = function(A) {\n    const len = A.length;\n    if (len = 0; i--) {\n        max[i] = Math.max(max[i+1], A[i]);\n    }\n\n    let left = 0, right = 0, res = 0;\n    while (right  max[right]) {\n            left++;\n        }\n    }\n    return res;\n};\n\n"},"two-pointer/948-bag-of-tokens.html":{"url":"two-pointer/948-bag-of-tokens.html","title":"948: Bag of Tokens","keywords":"","body":"这首题一开始想到dp, 分治去了，因为有点像取石子的题。用分治法写很麻烦，最后还超时了。没办法重新想思路，其实这道题有一个隐含条件，那就是买入最小的，卖出最大的，可以凭空增加power的数量，然后再检查是否能买到更多的分数。本质上还是一道双指针题。要注意每次买入前要检察是否当前的power数足够买入point.\nvar bagOfTokensScore = function(tokens, P) {\n    const len = tokens.length;\n    if (len === 0 || P  a - b);\n\n    let max = 0;\n    let start = 0, end = len-1;\n    while (start = tokens[start]) {\n            P += (tokens[end--] - tokens[start++]);\n        } else {\n            break;\n        }\n    }\n    return max;\n};\n\nfunction getPoints(tokens, start, end, P) {\n    if (end - start = tokens[start]) {\n        P -= tokens[start++];\n        points++;\n    }\n    return points;\n}\n\n"},"graph/947-moast-stones-removed-with-same-row-or-col.html":{"url":"graph/947-moast-stones-removed-with-same-row-or-col.html","title":"947: Most Stones Removed with Same Row or Column","keywords":"","body":"这道题本质上是图的连通性问题。通过行列坐标可以构造出无向图。然后DFS遍历每一个节点，数算出图中所有连通的节点数。需要注意的是每次出发的起点不要计算，因为删除到最后每个连通子图需要留下至少一个点。这个方法是通用的，不论在什么规则下导致两点连通，我们都可以用这种方法先构造出adjacent map。下次即使对角线上的点也连通，也可以用这种方法。\nvar removeStones = function(stones) {\n    const len = stones.length;\n    if (len \n"},"graph/934-shortest-bridge.html":{"url":"graph/934-shortest-bridge.html","title":"934: Shortest Bridge","keywords":"","body":"这道题和其它的islands题目非常类似。难点在于如何确定两个islands之间的最短距离。\n最直接的想法是:\n\ndfs把两个islands的坐标分别记录下来，存在两个array中。\n双重循环两个array, 找到其中Manhattan距离最短的两个点。\n这种方法勉强AC, beat 0% (囧)\n\nvar shortestBridge = function(grid) {\n    const rows = grid.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = grid[0].length;\n\n    const islands = [];\n    for (let i = 0; i = 0 && nextRow = 0 && nextCol \n更好的做法是：\n\ndfs找到一个island的所有点\n用bfs从所有点向外扩张，直到碰到第二个island的点\n\nvar shortestBridge = function(grid) {\n    const rows = grid.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = grid[0].length;\n\n    let queue;\n    let flag = true;\n    for (let i = 0; i  0) {\n        const size = queue.length;\n        for (let i = 0; i = 0 && x+dx[j] = 0 && y+dy[j] = 0 && nextRow = 0 && nextCol \n"},"graph/200-number-of-islands.html":{"url":"graph/200-number-of-islands.html","title":"200 : Number of Islands","keywords":"","body":"这道题和947题很类似，本质上是图的连通性问题，利用dfs遍历所有连通在一起的点。这个题也有自己的特殊性，使代码简化：\n\n不需要额外定义visited矩阵，可以直接修改 grid[i][j] = 0 来判断一个点是否已经访问过\n每一个起点是一个新的island的开始，dfs函数不需要返回任何值，在主函数中设计数器即可\n\nvar numIslands = function(grid) {\n    const rows = grid.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = grid[0].length;\n\n    let res = 0;\n    for (let i = 0; i = 0 && nextRow = 0 && nextCol \n"},"graph/694-number-of-distinct-islands.html":{"url":"graph/694-number-of-distinct-islands.html","title":"694 : Number of Distinct Islands","keywords":"","body":"这道题和200题number of islands很像，唯一的区别就是要检查island的形状。难点在于如何给形状编码。因为每次dfs traverse的路径是相同的，可以设每一个island的起点为归一化的零点，然后把沿路访问过的归一化的节点坐标记录下来, 就可以做为island的形状编码。\nvar numDistinctIslands = function(grid) {\n    const rows = grid.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = grid[0].length;\n\n    const set = new Set();\n    let res = 0;\n    for (let i = 0; i = 0 && row+dx[i] = 0 && col+dy[i] \n"},"graph/695-max-area-of-island.html":{"url":"graph/695-max-area-of-island.html","title":"695 : Max Area of Island","keywords":"","body":"这道题和200，694非常类似，关键在于计算出每个islands的节点个数。\nvar maxAreaOfIsland = function(grid) {\n    const rows = grid.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = grid[0].length;\n\n    const set = new Set();\n    let max = 0;\n    for (let i = 0; i = 0 && row+dx[i] = 0 && col+dy[i] \n"},"graph/815-bus-routes.html":{"url":"graph/815-bus-routes.html","title":"815 : Bus Routes","keywords":"","body":"这道题虽然是hard, 但是思路比较直接。首先要看到这是一个graph的问题，连通的节点不是bus stop，而是bus/route。\n\n对每一个bus route建立stop map或set，方便以后查询\n利用前一步的stop map, 两两比较bus route，确定是否两个route之间有相同的stop,如果有则这两个routes是连通的\n对起点和终点找到所有bus routes包含起点或终点\n以所有包括起点的bus routes开始进行bfs，当某个route在终点所包括的routes中，返回当前的level\n\nvar numBusesToDestination = function(routes, S, T) {\n    const numBuses = routes.length;\n    if (numBuses === 0) {\n        return -1;\n    }\n    if (S === T) {\n        return 0;\n    }\n    const stops = [];\n    for (let i = 0; i  0) {\n        const size = queue.length;\n        for (let i = 0; i \n"},"graph/675-cut-off-trees-for-golf-event.html":{"url":"graph/675-cut-off-trees-for-golf-event.html","title":"675 : Cut Off Trees for Golf Event","keywords":"","body":"这个题虽然是hard，但是思路还是非常直接的，就是代码量大一点，一次AC有难度。基本思路是\n\n扫描array，记录树的高度，并从小到大排序\n建立树的高度与树的坐标之间的map，方便根据排序的树高找到树的位置\n遍历高度array, 知道当前和下一颗树的位置，用bfs找到最短距离。如果无法到达，则返回-1.\n\nvar cutOffTree = function(forest) {\n    const rows = forest.length;\n    if (rows === 0) {\n        return 0;\n    }\n    const cols = forest[0].length;\n    if (forest[0][0] === 0) {\n        return -1;\n    }\n\n    const map = {};\n    const arr = [];\n    for (let i = 0; i  1) {\n                map[forest[i][j]] = [i, j];\n                arr.push(forest[i][j]);\n            }\n        }\n    }\n\n    arr.sort((a, b) => a - b);\n    let res = 0;\n    let start = [0, 0];\n    for (let i = 0; i  0) {\n        const size = queue.length;\n        for (let i = 0; i = 0 && x = 0 && y  0 &&\n           !visited[x][y];\n}\n\n"},"graph/490-the-maze.html":{"url":"graph/490-the-maze.html","title":"490 : The Maze","keywords":"","body":"这道题乍一看有点难，其实还是bfs的变种。不同于一般的island问题（找四个邻接点), 这里的neighbor是沿一个方向一直走下去直到走不动。在处理完当前节点后可以把它标记为-1，以避免回头的问题。\nvar hasPath = function(maze, start, dest) {\n    const rows = maze.length;\n    if (rows === 0) {\n        return true;\n    }\n    if (maze[start[0]][start[1]] === 1 || maze[dest[0]][dest[1]] === 1) {\n        return false;\n    }\n    const cols = maze[0].length;\n\n    const queue = [start];\n    while (queue.length > 0) {\n        const [x, y] = queue.pop();\n        if (x === dest[0] && y === dest[1]) {\n            return true;\n        }\n        // search left\n        let i = y;\n        while (i >= 0 && maze[x][i] === 0) {\n            i--;\n        }\n        if (i+1 !== y) {\n            if (i  cols-1 || maze[x][i] === 1) {\n                queue.unshift([x, i-1]);\n            }\n        }\n\n        // search up\n        i = x;\n        while (i >= 0 && maze[i][y] === 0) {\n            i--;\n        }\n        if (i+1 !== x) {\n            if (i  rows - 1 || maze[i][y] === 1) {\n                queue.unshift([i-1, y]);\n            }\n        }\n        maze[x][y] = -1;\n    }\n    return false;\n};\n\n"},"graph/489-robot-room-cleaner.html":{"url":"graph/489-robot-room-cleaner.html","title":"489 : Robot Room Cleaner","keywords":"","body":"这道题有一点难懂，它不像其它graph的题那样有一个array作为输入，而是需要robot具有自学习能力，慢慢探索地图，所以只有robot一个input。明白这个以后思路还是很直接的：\n\n定义一个set存放已经访问过的位置\ndfs每一个位置，如果未访问过则清理该位置\niterave四个方向，如果可以移动到下个位置，则dfs之，如果不行，转90度继续尝试 （在清理完之后要回到当前位置，方向也要相同）\n\nvar cleanRoom = function(robot) {\n    const set = new Set();\n    // direction: 0: N, 90: W, 180: E, 270: W\n    helper(robot, set, 0, 0, 0);\n};\n\nfunction helper(robot, set, x, y, dir) {\n    const code = `${x}->${y}`;\n    if (set.has(code)) {\n        return;\n    }\n    set.add(code);\n    robot.clean();\n    const nextDirs = [0, 90, 180, 270];\n    for (let i = 0; i \n"},"graph/787-cheapest-flights-within-K-stops.html":{"url":"graph/787-cheapest-flights-within-K-stops.html","title":"787 : Cheapest Flights Within K Stops","keywords":"","body":"这道题是一道经典的带权重的有向图问题。既可以用BFS，也可以用DFS来解决。\n\nBFS: 难点在于每个加入队列的节点需要包含到目前为止的accumulated cost。一开始超时，需要在入队前判断accumulated cost是否已经比当前的min cost大，如果大就没有必要再入队了。\n\nvar findCheapestPrice = function(n, flights, src, dst, K) {\n    if (n === 0) {\n        return 0;\n    }\n    const map = {};\n    for (let i = 0; i  0 && level = min) continue;\n                    queue.unshift([map[curr][j], accumCost + cost[curr+','+map[curr][j]]]);\n                }\n            }\n        }\n        level++;\n    }\n    return min === Number.MAX_SAFE_INTEGER ? -1 : min;\n};\n\n\nDFS: 同样要prone优化，否则会超时。\n\nvar findCheapestPrice = function(n, flights, src, dst, K) {\n    if (n === 0) {\n        return 0;\n    }\n    if (src === dst) {\n        return 0;\n    }\n    const map = {};\n    for (let i = 0; i = min[0]) {\n            continue;\n        }\n        dfs(map, cost, next, dst, K-1, sum + cost[src+','+next], min);\n    }\n}\n\n"},"intervals/763-partition-labels.html":{"url":"intervals/763-partition-labels.html","title":"763: Partition Labels","keywords":"","body":"这道题本质上是一道interval的问题。我们只关心对于一个letter，它首次和末次出现的位置，然后依次merge interval，最后返回merged interval的长度。\nvar partitionLabels = function(S) {\n    const len = S.length;\n    if (len === 0) {\n        return [];\n    }\n    const map = {};\n    for (let i = 0; i  curr[0]) {\n            intervals.pop();\n            intervals.push([last[0], Math.max(last[1], curr[1])]);\n        } else {\n            intervals.push([curr[0], curr[1]]);\n        }\n        delete map[S[i]];\n    }\n    return intervals.map(i => i[1] - i[0] + 1);\n};\n\n"},"state-loop/957-prison-cells-after-N-days.html":{"url":"state-loop/957-prison-cells-after-N-days.html","title":"957: Prison Cells After N Days","keywords":"","body":"这道题当看到example2的N=100000000时，就应该意识到状态肯定会循环重复。只要记录每次的状态，直到检测到状态重复时，就可以算出循环起始位置和循环长度。\npos = (N - periodStart) % period + periodStart\nvar prisonAfterNDays = function(cells, N) {\n    const len = cells.length;\n    if (len === 0 || N === 0) {\n        return [];\n    }\n\n    const map = {[cells.join('')]: 0};\n    const states=  [cells];\n    let i = 1;\n    let period = 0;\n    let periodStartPos = 0;\n    while (true) {\n        const nextState = getNextCell(cells);\n        const nextStateStr = nextState.join('');\n        if (nextStateStr in map) {\n            periodStartPos = map[nextStateStr];\n            period = states.length - map[nextStateStr];\n            break;\n        } else {\n            map[nextStateStr] = i;\n        }\n        states.push(nextState);\n        cells = nextState;\n        i++;\n    }\n    return states[(N-periodStartPos) % period + periodStartPos];\n};\n\nfunction getNextCell(cells) {\n    const len = cells.length;\n    const next = new Array(len);\n    next[0] = 0; \n    next[len-1] = 0;\n    for (let i = 1; i\n"},"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html":{"url":"divide-and-conqueor/955-delete-columns-to-make-sorted-2.html","title":"955: Delete Columns to Make Sorted II","keywords":"","body":"这道题我一开始想复杂了，我想的是用分治的思想去解决这个问题。\n\n对于每一列的字符进行分组，建立递推关系。\n难点是前一组如果删除了某一列，那么之后的组应该跳过那一列的检查。\n当前列开始往后的子串中，删除的列数等于每一组删除的列数之和。\n\nvar minDeletionSize = function(A) {\n    const len = A.length;\n    if (len = A[0].length) {\n        return 0;\n    }\n    if (deletedLevels.has(level)) {\n        return helper(A, start, end, level+1, deletedLevels);\n    }\n    if (start >= end) {\n        return 0;\n    }\n    const blocks = [];\n    let i = start;\n    while (i  A[i+1][level].charCodeAt(0)) {\n                deletedLevels.add(level);\n                const sum = helper(A, start, end, level, deletedLevels) + 1;\n                return sum;\n            } else {\n                break;\n            }\n        }\n        blocks.push([j, i]);\n        i++;\n    }\n    let sum = 0;\n    for (let i = 0; i \n另一种非常精妙的解法是建立boolean数组存储当前字符串是否已经是排序状态。\n\n首先扫描一列，如果存在逆序，则删除这一列\n如果没有逆序，则再扫描一遍，看看哪些字符串的顺序已经确定（除了字符相同的顺序不定）\n\nvar minDeletionSize = function(A) {\n    const len = A.length;\n    if (len  A[i+1][l].charCodeAt(0)) {\n                shouldDelete = true;\n                res++;\n                break;\n            }\n        }\n        if (!shouldDelete) {\n            for (let i = 0; i \n"},"divide-and-conqueor/678-valid-parenthesis-string.html":{"url":"divide-and-conqueor/678-valid-parenthesis-string.html","title":"678: Valid Parenthesis String","keywords":"","body":"这道题比没有wild card的那道看起来要难了不少。关键是每次遇到*就会有3个分支，这样总共的可能性是指数上升的。不考虑复杂度的问题，最直接的想法是分治。用一个counter统计左右括号出现次数的差。合法的字符串要求最终的counter = 0。\nvar checkValidString = function(s) {\n    const len = s.length;\n    if (len === 0) {\n        return true;\n    }\n    return dfs(0, s, 0);\n};\n\nfunction dfs(pos, str, curr) {\n    if (pos >= str.length) {\n        return curr === 0;\n    }\n    if (curr \n"},"array/406-queue-reconstruction-by-height.html":{"url":"array/406-queue-reconstruction-by-height.html","title":"406: Queue Reconstruction by Height","keywords":"","body":"这道题挺有趣的，基本就是在考查面试者是否脑子够聪明。反正我捣鼓了半天也没想到最佳策略。下面的分析是根据discussion里的最佳答案来的：\n\n排序时高个子前面有几个人是和比他低的人无关的，只和比他高或一样高的人有关。\n前一句好像是废话，因为这就是(h, k)里关于k的定义。但这却是解题的关键。\n当先排高个，因为高个排过后，低个不论放哪都不影响刚才高个的k\n\nvar reconstructQueue = function(people) {\n    const len = people.length;\n    if (len  {\n        if (a[0] !== b[0]) {\n            return b[0] - a[0];\n        }\n        return a[1] - b[1];\n    });\n    const res = [];\n    for (let i = 0; i \n"},"geometry/836-rectange-overlap.html":{"url":"geometry/836-rectange-overlap.html","title":"836: Rectangle Overlap","keywords":"","body":"这个题一维二维的情况都很经典，可以记住结论：\n\n一维：[l1, r1], [l2, r2]. overlap  l1 \n二维：[blx1, bly1, trx1, try1], [blx2, bly2, trx2, try2]. overlap  blx1 \n\n"},"stack/739-daily-temperatures.html":{"url":"stack/739-daily-temperatures.html","title":"739: Daily Temperatures","keywords":"","body":"这道题本质上是维护一个min stack，当遇到破坏min stack的数时就先pop, 再push。技巧是把index入栈而不是value本身。\nvar dailyTemperatures = function(T) {\n    const len = T.length;\n    if (len === 0) {\n        return [];\n    } \n    if (len === 1) {\n        return [0];\n    }\n\n    const stack = [];\n    const res = new Array(len);\n    for (let i = 0; i  0) {\n            if (T[i] > T[stack[stack.length-1]]) {\n                const prevIdx = stack.pop();\n                res[prevIdx] = i - prevIdx;\n            } else {\n                break;\n            }\n        }\n        stack.push(i);\n    }\n    return res;\n};\n\n"},"stack/496-next-greater-element-1.html":{"url":"stack/496-next-greater-element-1.html","title":"496: Next Greater Element I","keywords":"","body":"一看到 next greater number 就应该想到stack, 这道题和739非常类似。都是要维护一个min stack，当遇到破坏min stack的数时就先pop, 再push。技巧是把index入栈而不是value本身。\nvar nextGreaterElement = function(nums1, nums2) {\n    const len1 = nums1.length;\n    const len2 = nums2.length;\n    if (len1 === 0) {\n        return [];\n    }\n    if (len2 === 0) {\n        return new Array(len1).fill(-1);\n    }\n\n    const map = {};\n    const res = new Array(len1).fill(-1);\n    for (let i = 0; i = nums2[i]) {\n            stack.push(i);\n            i++;\n            continue;\n        }\n        while (stack.length > 0 && nums2[stack[stack.length-1]] \n"},"stack/503-next-greater-element-2.html":{"url":"stack/503-next-greater-element-2.html","title":"503: Next Greater Element II","keywords":"","body":"这道题和496基本一样，只要先把array扩展为原来的一倍就可以处理circular的问题。\nvar nextGreaterElements = function(nums) {\n    const len = nums.length;\n    if (len === 0) {\n        return [];    \n    }\n    const res = new Array(len).fill(-1);\n    nums = [...nums, ...nums.slice(0, len-1)];\n    const stack = [];\n    for (let i = 0; i = nums[i]) {\n            stack.push(i);\n        } else {\n            while (stack.length > 0 && nums[stack[stack.length-1]] \n"},"api/380-insert-delete-getrandom-o1.html":{"url":"api/380-insert-delete-getrandom-o1.html","title":"380: Insert Delete GetRandom O(1)","keywords":"","body":"这道题难点在于选择正确的数据结构。如果用array，getrandom和insert很容易O(1)， 但是删除不容易O(1)。考虑到这是一个set，数据的顺序无所谓，可以用一个map存储meta信息。\n\narr存储数据\nmap的key是数据值，value是对应的arr的下标\n\n当删除一个数时，\n\ncopy array中最后一个数到要删除数的位置, 更新map的值，删除要弹出的key, value，最后弹出array的最后一个数。有点狸猫换太子的意思，挺巧妙的。\n\nvar RandomizedSet = function() {\n    this.map = {};\n    this.arr = [];\n};\n\n/**\n * Inserts a value to the set. Returns true if the set did not already contain the specified element. \n * @param {number} val\n * @return {boolean}\n */\nRandomizedSet.prototype.insert = function(val) {\n    if (val in this.map) {\n        return false;\n    }\n    this.arr.push(val);\n    this.map[val] = this.arr.length-1;\n    return true;\n};\n\n/**\n * Removes a value from the set. Returns true if the set contained the specified element. \n * @param {number} val\n * @return {boolean}\n */\nRandomizedSet.prototype.remove = function(val) {\n    if (!(val in this.map)) {\n        return false;\n    }\n    this.arr[this.map[val]] = this.arr[this.arr.length-1];\n    this.map[this.arr[this.arr.length-1]] = this.map[val];\n    this.arr.pop();\n    delete this.map[val];\n    return true;\n};\n\n/**\n * Get a random element from the set.\n * @return {number}\n */\nRandomizedSet.prototype.getRandom = function() {\n    return this.arr[Math.floor(Math.random() * this.arr.length)];\n};\n\n"},"api/353-design-snake-game.html":{"url":"api/353-design-snake-game.html","title":"353: Design Snake Game","keywords":"","body":"这道题非常有意思，难度不大但是想bug free也不容易。如果思路清晰则代码会非常简洁。\n\n移动头部到下一个cell\n判断此时头部是否已经越界\n判断是否当前cell有食物，如果没有则弹出蛇尾。判断当前cell是否和蛇collide，如果没有则压入cell作为新的蛇头\n\n/**\n * Initialize your data structure here.\n        @param width - screen width\n        @param height - screen height \n        @param food - A list of food positions\n        E.g food = [[1,1], [1,0]] means the first food is positioned at [1,1], the second is at [1,0].\n * @param {number} width\n * @param {number} height\n * @param {number[][]} food\n */\nvar SnakeGame = function(width, height, food) {\n    this.rows = height;\n    this.cols = width;\n    this.food = food;\n    this.foodIdx = 0;\n    this.x = 0;\n    this.y = 0;\n    this.snake = [[0, 0]];\n};\n\n/**\n * Moves the snake.\n        @param direction - 'U' = Up, 'L' = Left, 'R' = Right, 'D' = Down \n        @return The game's score after the move. Return -1 if game over. \n        Game over when snake crosses the screen boundary or bites its body. \n * @param {string} direction\n * @return {number}\n */\nSnakeGame.prototype.move = function(direction) {\n    if (direction === 'U') {\n        this.x--;\n    } else if (direction === 'D') {\n        this.x++;\n    } else if (direction === 'L') {\n        this.y--;\n    } else {\n        this.y++;\n    }\n\n    if (!this.isValid(this.x, this.y)) {\n        return -1;\n    }\n\n    if (!this.process(this.x, this.y)) {\n        return -1;\n    }\n    return this.snake.length - 1;\n};\n\nSnakeGame.prototype.isValid = function (x, y) {\n    return x >= 0 && x = 0 && y \n"},"api/348-design-tic-tac-toe.html":{"url":"api/348-design-tic-tac-toe.html","title":"348: Design Tic-Tac-Toe","keywords":"","body":"这道题难点是如何快速的判断是否已经满足获胜条件。由于获胜条件是某一行/列/主副对角线全部是一种棋子，我们可以存储每一行/列/对角线，每一位选手的棋子总数。\nTicTacToe.prototype.move = function(row, col, player) {\n    this.rowCount[player-1][row]++;\n    this.colCount[player-1][col]++;\n    if (row === col) {\n        this.diagCount[player-1][0]++;\n    }\n    if (row === this.rows - col - 1) {\n        this.diagCount[player-1][1]++;\n    }\n    if (this.rowCount[player-1][row] === this.rows ||\n        this.colCount[player-1][col] === this.rows ||\n        this.diagCount[player-1][0] === this.rows ||\n        this.diagCount[player-1][1] === this.rows\n       ) {\n        return player;\n    }\n    return 0;\n};\n\n"},"api/341-flatten-nested-list-iterator.html":{"url":"api/341-flatten-nested-list-iterator.html","title":"341: Flatten Nested List Iterator","keywords":"","body":"这个题需要一个一个把数据读出，所以不能一次性把array全部flat然后存起来. 既然是iterative method, 基本上是离不开stack的，需要存当前遍历的array及index。\n输入：[[1, 1], 2, [3, 3]]\nStack: \n[[1, 1], 0]\n[[[1,1], 2, [3,3]], 0]\n如果当前是nestedList, 则把list取出入栈. 当pos到达array尾部，则出栈，并把栈头的pos + 1.\n/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * function NestedInteger() {\n *\n *     Return true if this NestedInteger holds a single integer, rather than a nested list.\n *     @return {boolean}\n *     this.isInteger = function() {\n *         ...\n *     };\n *\n *     Return the single integer that this NestedInteger holds, if it holds a single integer\n *     Return null if this NestedInteger holds a nested list\n *     @return {integer}\n *     this.getInteger = function() {\n *         ...\n *     };\n *\n *     Return the nested list that this NestedInteger holds, if it holds a nested list\n *     Return null if this NestedInteger holds a single integer\n *     @return {NestedInteger[]}\n *     this.getList = function() {\n *         ...\n *     };\n * };\n */\n/**\n * @constructor\n * @param {NestedInteger[]} nestedList\n */\nvar NestedIterator = function(nestedList) {\n    this.stack = [[nestedList, 0]];\n};\n\n\n/**\n * @this NestedIterator\n * @returns {boolean}\n */\nNestedIterator.prototype.hasNext = function() {\n    while (this.stack.length > 0) {\n        const [arr, pos] = this.stack[this.stack.length-1];\n        if (arr.length === pos) {\n            this.stack.pop();\n            if (this.stack.length > 0) {\n                this.stack[this.stack.length-1][1]++;\n            }\n        } else {\n            const curr = arr[pos];\n            if (curr.isInteger()) {\n                return true;\n            }\n            this.stack.push([curr.getList(), 0]);\n        }\n    }\n    return false;\n};\n\n/**\n * @this NestedIterator\n * @returns {integer}\n */\nNestedIterator.prototype.next = function() {\n    if (this.hasNext()) {\n       const [arr, pos] = this.stack[this.stack.length-1];\n        const res = arr[pos].getInteger();\n        this.stack[this.stack.length-1][1]++\n        return res; \n    }\n    return null;\n};\n\n/**\n * Your NestedIterator will be called like this:\n * var i = new NestedIterator(nestedList), a = [];\n * while (i.hasNext()) a.push(i.next());\n*/\n\n"},"priority-queue/373-find-k-pairs-with-smallest-sums.html":{"url":"priority-queue/373-find-k-pairs-with-smallest-sums.html","title":"373: Find K Pairs with Smallest Sums","keywords":"","body":"这类题的特点非常明显，只要是k smallest一般都可以用priority queue来解决，关键是如何确定下一步要入队的后选值。\n这一题的难点是如何保证(i, j)只入队一次（不能重复），所以不可以无脑把(i+1, j) 和（i, j+1)都塞进去。\n可以用hashSet来保证(i, j)只入队一次，更巧妙的方法是设计一种入队方法使每个值都能入队一次。\n方法是：可以把(i, 0)先统一入队 i \b从0到len1-1。之后每次只用把(i, j+1)入队即可。\npublic List kSmallestPairs(int[] nums1, int[] nums2, int k) {\n    int len1 = nums1.length;\n    int len2 = nums2.length;\n    List res = new ArrayList<>();\n    if (k == 0 || len1 == 0 || len2 == 0) {\n        return res;\n    }\n    Queue queue = new PriorityQueue<>((a,b) -> nums1[a[0]] + nums2[a[1]] - nums1[b[0]] - nums2[b[1]]);\n    for (int i = 0; i  0 && k > 0) {\n        int[] curr = queue.poll();\n        int i = curr[0];\n        int j = curr[1];\n        res.add(new int[]{nums1[i], nums2[j]});\n        if (j+1 \n"},"priority-queue/347-top-K-frequent-elements.html":{"url":"priority-queue/347-top-K-frequent-elements.html","title":"347: Top K Frequent Elementss","keywords":"","body":"这道题有两种解法：\n\npriority queue： 这是最无脑的解法，直接把(value, freq) 丢到priority queue里，然后弹出前k个\n\npublic List topKFrequent(int[] nums, int k) {\n    int len = nums.length;\n    List res = new ArrayList<>();\n    if (len == 0) {\n        return res;\n    }\n    if (len == 1) {\n        res.add(nums[0]);\n        return res;\n    }\n\n    Map map = new HashMap<>();\n    Queue> queue = new PriorityQueue<>((a, b) -> b.getValue() - a.getValue());\n    for (int num : nums) {\n        if (!map.containsKey(num)) {\n            map.put(num, 1);\n        } else {\n            map.put(num, map.get(num) + 1);\n        }\n    }\n    for (Map.Entry entry : map.entrySet()) {\n        queue.offer(entry);\n    }\n    for (int i = 0; i \n\nbucket sort: 这种方法仅局限于整数排序（range不太大）。思想是把要排序的数作为index（这里是freq)，然后按index从大到小扫描。\n\nvar topKFrequent = function(nums, k) {\n    const len = nums.length;\n    if (len === 0 || k === 0) {\n        return [];\n    }\n    const map = {};\n    for (let num of nums) {\n        if (num in map) {\n            map[num]++;\n        } else {\n            map[num] = 1;\n        }\n    }\n\n    const arr = new Array();\n    let maxIndex = 0;\n    for (let key in map) {\n        const freq = map[key];\n        if (!arr[freq]) {\n            arr[freq] = [key];\n        } else {\n            arr[freq].push(key);\n        }\n        maxIndex = Math.max(maxIndex, freq);\n    }\n\n    const res = [];\n    for (let i = maxIndex; i >= 0; i--) {\n        if (arr[i]) {\n            for (let j = 0; j \n"},"design/chess-game.html":{"url":"design/chess-game.html","title":"Chess Game","keywords":"","body":"问题：设计chess game?\nClasses:\n\nGame\n\nBoard\ntwo players\n\n\nBoard\n\n2-D 8x8 cells\ninit(): initialize array and pieces\ncanMove(command)\nmovePiece()\nremovePiece()\n\n\nCell\n\npiece\nx, y coordinates\n\n\nPiece (abstract class)\n\nx, y coordiates\nisValidMove(board, fromX, fromY, toX, toY)\nlive: is alive or dead\n\n\nPlayer\n\nlist of pieces\nlist of commands\nmeta data (username, score)\n\n\nCommand\n\nPiece\nDestination\n\n\n\npublic class Game {\n    private final static Board board;\n    private Player p1;\n    private Player p2;\n    public Game(username1, username2) {\n        board = new Board();\n        p1 = new Player(username1);\n        p2 = new Player(username2);\n    }\n\n    public startGame() {\n        while (true) {\n            process(p1);\n            if (board.getWin()) {\n                System.out.println(\"P1 win\");\n                break;\n            }\n            process(p2);\n            if (board.getWin()) {\n                System.out.println(\"P2 win\");\n                break;\n            }\n        }\n    }\n\n    private process(Player p) {\n        Command cmd = new Command(input);\n        p.addCommand(cmd);\n        board.executeCommand(p);\n    }\n}\n\npublic class Board {\n    private Spot[][] spots;\n    private boolean win;\n\n    public Board() {\n        win = false;\n        spots = new Spot[8][8];\n    }\n\n    public void init(Player p) {\n\n    }\n\n    public executeCommand(Player p) {\n        Command cmd = p.getCurrentCommand(p);\n        if (!piece.validMove(this, cmd.curX, cmd.curY, cmd.desX, dstY)) {\n            p.removeCurrentCmd();\n            return false;\n        }\n        if (spot[cmd.desX][cmd.desY] != null && spot[cmd.desX][cmd.desY].color == piece.color) {\n            return false;\n        }\n        spot[cmd.desX][cmd.desY].occupy(piece);\n        if (piece.getClass().getName().equals(\"King\")) {\n            win = true;\n        }\n        return true;\n    }\n}\n\n"},"design/deck-of-cards.html":{"url":"design/deck-of-cards.html","title":"Deck of Cards","keywords":"","body":"问题：Design black jack?\nClasses:\n\nCard\n\nRank: value of the card\nSuit: Club, Diamond, Heart, Spade\n\n\nHand (player or dealer)\n\nCards: array of current cards\naddCard\ngetValue: score of the hand\n\n\nDeck\n\nCards\nshuffle\nsendCard\n\n\nGame\n\ndeck\nplayer\ndealer\nin\n\n\n\n"},"design/parking-lot.html":{"url":"design/parking-lot.html","title":"Parking Lot","keywords":"","body":"问题：如何设计一个停车场？\n可以做如下假设：\n\n停车场有多层，每层有多行停车位\n\n停车场可以停摩托车，小轿车和公交车\n\n停车场有摩托车位，紧凑型车位，和大型车位\n\n摩托车可以停在任何位置\n\n小轿车可以停在紧凑型车位和大型车位\n\n公交车只能停在同一行中连续的五个大型车位上，不能停在小位置上\n\n\nenum VehicleSize { Large, Compact, Motocyle };\nclass Vehicle {\n    public int spotsNum() {};\n    public VehicleSize size() {};\n    protected List parkingSpots = new ArrayList<>();\n    public park(ParkingSpot spot) {\n        parkingSpots.add(spot);\n    }\n    public clearSpots() {\n        for (int i= 0; i = vehicle.size();\n    }\n\n    public boolean park(Vehicle v) {\n        if (!canFitVehicle(v)) {\n            return false;\n        }\n        vehicle = v;\n        vehicle.park(this);\n        return true;\n    }\n\n    public removeVehicle() {\n        level.spotFreed();\n        vehicle = null;\n    }\n}\nclass Level {\n    private ParkingSpot[] spots;\n    private int fFloor;\n    private int fAvailableSpots;\n    private int fNumberOfRows;\n    private int fSpotsPerRow;\n\n    public Level(int floor, int numberOfRows, int spotsPerRow) {\n        fFloor = floor;\n        fNumberOfRows = numberOfRows;\n        fSpotsPerRow = spotsPerRow;\n\n        int[] motoSpots = new Spot();\n    }\n    public parkVehicle（Vehicle vehicle) {\n        int vehicleSize = vehicle.size();\n        if (vehicleSize === VehicleSize.Large) {\n            for (int i = 0; i \n"},"design/tiny-url.html":{"url":"design/tiny-url.html","title":"Tiny Url","keywords":"","body":""},"design/vending-machine.html":{"url":"design/vending-machine.html","title":"Vending Machine","keywords":"","body":"从state machine的角度来考虑设计\nStates of a vending machine:\n\nEmpty\nCoin inserted\nNo coin inserted\nDispense a merchandise\n\n"}}}